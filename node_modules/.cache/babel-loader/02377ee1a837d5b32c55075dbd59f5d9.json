{"ast":null,"code":"import { ADD_NEW_TASK, DISPLAY_ANT_BOOL_FLIP, DISPLAY_TASK_INFO_FLIP, SET_TASK_SELECTED, ADD_NEW_SUBTASK } from './constants';\nimport { tasks } from './Data/tasks';\nimport update from 'react-addons-update'; //EditTasks\n\nconst initialStateTasks = {\n  tasksVar: tasks,\n  tasksLength: 0\n};\nexport const editTasks = (state = initialStateTasks, action = {}) => {\n  switch (action.type) {\n    case ADD_NEW_TASK:\n      return Object.assign({}, state, {\n        tasksVar: [...state.tasksVar, action.payload],\n        tasksLength: state.tasksLength + 1\n      });\n    // case ADD_NEW_SUBTASK:\n    //     console.log(action.payload)\n    //     console.log('add new subtask')\n    //     return Object.assign({},\n    //         state,\n    //         {\n    //             tasksVar: [...state.tasksVar[action.payload.index].subtasks, ...action.payload.items]\n    //         });\n\n    case ADD_NEW_SUBTASK:\n      console.log('updating state');\n      return update(state, {\n        tasksVar: {\n          [action.payload.index]: {\n            subtasks: {\n              $set: [...subtasks, ...action.payload.items]\n            }\n          }\n        }\n      });\n\n    default:\n      return state;\n  }\n}; //Display ANT Bool\n\nconst initialStateDisplayANTBool = {\n  displayANTBoolVar: false\n};\nexport const displayANTBool = (state = initialStateDisplayANTBool, action = {}) => {\n  switch (action.type) {\n    case DISPLAY_ANT_BOOL_FLIP:\n      return Object.assign({}, state, {\n        displayANTBoolVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //Display Task Info Bool\n\nconst initialStateTaskInfoBool = {\n  displayTaskInfoBoolVar: false\n};\nexport const displayTaskInfoBool = (state = initialStateTaskInfoBool, action = {}) => {\n  switch (action.type) {\n    case DISPLAY_TASK_INFO_FLIP:\n      return Object.assign({}, state, {\n        displayTaskInfoBoolVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //Set Task Selected\n\nconst initialStateTaskSelected = {\n  taskSelectedVar: -1\n};\nexport const setTaskSelected = (state = initialStateTaskSelected, action = {}) => {\n  switch (action.type) {\n    case SET_TASK_SELECTED:\n      return Object.assign({}, state, {\n        taskSelectedVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/reducers.js"],"names":["ADD_NEW_TASK","DISPLAY_ANT_BOOL_FLIP","DISPLAY_TASK_INFO_FLIP","SET_TASK_SELECTED","ADD_NEW_SUBTASK","tasks","update","initialStateTasks","tasksVar","tasksLength","editTasks","state","action","type","Object","assign","payload","console","log","index","subtasks","$set","items","initialStateDisplayANTBool","displayANTBoolVar","displayANTBool","initialStateTaskInfoBool","displayTaskInfoBoolVar","displayTaskInfoBool","initialStateTaskSelected","taskSelectedVar","setTaskSelected"],"mappings":"AAAA,SACIA,YADJ,EACkBC,qBADlB,EACyCC,sBADzC,EACiEC,iBADjE,EACoFC,eADpF,QAEO,aAFP;AAIA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;AACA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,QAAQ,EAAEH,KADY;AAEtBI,EAAAA,WAAW,EAAE;AAFS,CAA1B;AAKA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGJ,iBAAT,EAA4BK,MAAM,GAAG,EAArC,KAA4C;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,YAAL;AACI,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EACHJ,KADG,EAEH;AACIH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoBI,MAAM,CAACI,OAA3B,CADd;AAEIP,QAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,GAAoB;AAFrC,OAFG,CAAP;AAMJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKL,eAAL;AACIa,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAOZ,MAAM,CAACK,KAAD,EAAQ;AACjBH,QAAAA,QAAQ,EAAE;AACN,WAACI,MAAM,CAACI,OAAP,CAAeG,KAAhB,GAAwB;AACpBC,YAAAA,QAAQ,EAAE;AAAEC,cAAAA,IAAI,EAAE,CAAC,GAAGD,QAAJ,EAAc,GAAGR,MAAM,CAACI,OAAP,CAAeM,KAAhC;AAAR;AADU;AADlB;AADO,OAAR,CAAb;;AAOJ;AACI,aAAOX,KAAP;AA1BR;AA4BH,CA7BM,C,CA+BP;;AACA,MAAMY,0BAA0B,GAAG;AAC/BC,EAAAA,iBAAiB,EAAE;AADY,CAAnC;AAIA,OAAO,MAAMC,cAAc,GAAG,CAACd,KAAK,GAAGY,0BAAT,EAAqCX,MAAM,GAAG,EAA9C,KAAqD;AAC/E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,qBAAL;AACI,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEa,QAAAA,iBAAiB,EAAEZ,MAAM,CAACI;AAA5B,OAAzB,CAAP;;AACJ;AACI,aAAOL,KAAP;AAJR;AAMH,CAPM,C,CASP;;AAEA,MAAMe,wBAAwB,GAAG;AAC7BC,EAAAA,sBAAsB,EAAE;AADK,CAAjC;AAIA,OAAO,MAAMC,mBAAmB,GAAG,CAACjB,KAAK,GAAGe,wBAAT,EAAmCd,MAAM,GAAG,EAA5C,KAAmD;AAClF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,sBAAL;AACI,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEgB,QAAAA,sBAAsB,EAAEf,MAAM,CAACI;AAAjC,OAAzB,CAAP;;AACJ;AACI,aAAOL,KAAP;AAJR;AAMH,CAPM,C,CASP;;AAEA,MAAMkB,wBAAwB,GAAG;AAC7BC,EAAAA,eAAe,EAAE,CAAC;AADW,CAAjC;AAIA,OAAO,MAAMC,eAAe,GAAG,CAACpB,KAAK,GAAGkB,wBAAT,EAAmCjB,MAAM,GAAG,EAA5C,KAAmD;AAC9E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,iBAAL;AACI,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEmB,QAAAA,eAAe,EAAElB,MAAM,CAACI;AAA1B,OAAzB,CAAP;;AACJ;AACI,aAAOL,KAAP;AAJR;AAMH,CAPM","sourcesContent":["import {\n    ADD_NEW_TASK, DISPLAY_ANT_BOOL_FLIP, DISPLAY_TASK_INFO_FLIP, SET_TASK_SELECTED, ADD_NEW_SUBTASK\n} from './constants';\n\nimport { tasks } from './Data/tasks'\nimport update from 'react-addons-update';\n\n//EditTasks\nconst initialStateTasks = {\n    tasksVar: tasks,\n    tasksLength: 0\n}\n\nexport const editTasks = (state = initialStateTasks, action = {}) => {\n    switch (action.type) {\n        case ADD_NEW_TASK:\n            return Object.assign({},\n                state,\n                {\n                    tasksVar: [...state.tasksVar, action.payload],\n                    tasksLength: state.tasksLength + 1\n                });\n        // case ADD_NEW_SUBTASK:\n        //     console.log(action.payload)\n        //     console.log('add new subtask')\n        //     return Object.assign({},\n        //         state,\n        //         {\n        //             tasksVar: [...state.tasksVar[action.payload.index].subtasks, ...action.payload.items]\n        //         });\n        case ADD_NEW_SUBTASK:\n            console.log('updating state')\n            return update(state, {\n                tasksVar: {\n                    [action.payload.index]: {\n                        subtasks: { $set: [...subtasks, ...action.payload.items] }\n                    }\n                }\n            });\n        default:\n            return state;\n    }\n}\n\n//Display ANT Bool\nconst initialStateDisplayANTBool = {\n    displayANTBoolVar: false\n}\n\nexport const displayANTBool = (state = initialStateDisplayANTBool, action = {}) => {\n    switch (action.type) {\n        case DISPLAY_ANT_BOOL_FLIP:\n            return Object.assign({}, state, { displayANTBoolVar: action.payload })\n        default:\n            return state;\n    }\n}\n\n//Display Task Info Bool\n\nconst initialStateTaskInfoBool = {\n    displayTaskInfoBoolVar: false\n}\n\nexport const displayTaskInfoBool = (state = initialStateTaskInfoBool, action = {}) => {\n    switch (action.type) {\n        case DISPLAY_TASK_INFO_FLIP:\n            return Object.assign({}, state, { displayTaskInfoBoolVar: action.payload })\n        default:\n            return state;\n    }\n}\n\n//Set Task Selected\n\nconst initialStateTaskSelected = {\n    taskSelectedVar: -1\n}\n\nexport const setTaskSelected = (state = initialStateTaskSelected, action = {}) => {\n    switch (action.type) {\n        case SET_TASK_SELECTED:\n            return Object.assign({}, state, { taskSelectedVar: action.payload })\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}