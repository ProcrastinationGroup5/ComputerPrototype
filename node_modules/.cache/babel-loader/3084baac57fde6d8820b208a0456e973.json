{"ast":null,"code":"var _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/UserConsole/UserUpload/CustomDropzone.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { setFileUploadStatus, setFileUploadInProgress, setFileSubmitStatus } from '../../actions';\n\nconst mapStateToProps = state => {\n  return {\n    inProgress: state.fileUploadInProgress.inProgress,\n    fileSubmitComplete: state.fileSubmitCompleteData.fileSubmitComplete\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setFileUploadStatus: text => dispatch(setFileUploadStatus(text)),\n    setFileUploadInProgress: bool => dispatch(setFileUploadInProgress(bool)),\n    setFileSubmitStatus: bool => dispatch(setFileSubmitStatus(bool))\n  };\n};\n\nclass CustomDropzone extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      completed: 0,\n      fileName: '',\n      file: ''\n    };\n\n    this.onDrop = file => {\n      this.setState({\n        completed: 0,\n        fileName: file[0].name,\n        file: file\n      });\n      this.props.setFileUploadInProgress(true);\n      this.props.setFileUploadStatus(true);\n    };\n\n    this.userNotifProgress = () => {\n      if (this.props.inProgress === true) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, this.state.completed + '% completed');\n      } else if (this.props.inProgress === false) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"File Upload Complete\");\n      } else {\n        return null;\n      }\n    };\n\n    this.fileNameState = () => {\n      if (this.state.fileName !== '') {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, 'File: ' + this.state.fileName);\n      } else {\n        return null;\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.fileSubmitComplete === false && this.props.fileSubmitComplete === true) {\n      var req = request.post(\"https://yugyfyudf68i5sdtyfkghj.free.beeceptor.com \");\n      req.on('progress', event => {\n        var percent = Math.floor(event.percent);\n\n        if (percent >= 100) {\n          this.setState({\n            completed: 100\n          });\n        } else {\n          this.setState({\n            completed: percent\n          });\n        }\n      });\n      req.send(this.state.file);\n      req.end(() => {\n        this.props.setFileUploadInProgress(false);\n        this.props.setFileSubmitStatus(false);\n        setTimeout(function () {\n          setTimeout(this.props.setFileUploadInProgress('pending'), 3500);\n        }.bind(this), 3000);\n        this.setState({\n          completed: 0,\n          fileName: ''\n        });\n      });\n    }\n  }\n\n  render() {\n    const baseStyle = {\n      flex: 1,\n      display: 'flex',\n      padding: '20px',\n      borderWidth: 2,\n      borderRadius: 2,\n      borderColor: '#eeeeee',\n      borderStyle: 'dashed',\n      backgroundColor: '#fafafa',\n      fontSize: '0.8vw',\n      color: '#3830ab',\n      outline: 'none',\n      transition: 'border .24s ease-in-out',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '30vh'\n    };\n    return React.createElement(\"div\", {\n      style: baseStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(LinearProgress, {\n      color: \"primary\",\n      variant: \"determinate\",\n      value: this.state.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Dropzone, {\n      multiple: false,\n      onDrop: this.onDrop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), \"Click here to upload files\")), this.userNotifProgress(), this.fileNameState()));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomDropzone);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/UserConsole/UserUpload/CustomDropzone.js"],"names":["React","Component","connect","Dropzone","request","LinearProgress","setFileUploadStatus","setFileUploadInProgress","setFileSubmitStatus","mapStateToProps","state","inProgress","fileUploadInProgress","fileSubmitComplete","fileSubmitCompleteData","mapDispatchToProps","dispatch","text","bool","CustomDropzone","completed","fileName","file","onDrop","setState","name","props","userNotifProgress","fileNameState","componentDidUpdate","prevProps","req","post","on","event","percent","Math","floor","send","end","setTimeout","bind","render","baseStyle","flex","display","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","fontSize","color","outline","transition","justifyContent","alignItems","height","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { setFileUploadStatus, setFileUploadInProgress, setFileSubmitStatus } from '../../actions';\n\nconst mapStateToProps = state => {\n  return {\n      inProgress: state.fileUploadInProgress.inProgress,\n      fileSubmitComplete: state.fileSubmitCompleteData.fileSubmitComplete,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setFileUploadStatus: (text) => dispatch(setFileUploadStatus(text)),\n      setFileUploadInProgress: (bool) => dispatch(setFileUploadInProgress(bool)),\n      setFileSubmitStatus: (bool) => dispatch(setFileSubmitStatus(bool))\n  }\n}\n\nclass CustomDropzone extends Component {\n  state = {\n    completed: 0,\n    fileName: '',\n    file: ''\n  }\n\n  onDrop = file => {\n    this.setState({ completed: 0, fileName: file[0].name, file: file })\n    this.props.setFileUploadInProgress(true)\n    this.props.setFileUploadStatus(true)\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.fileSubmitComplete === false && this.props.fileSubmitComplete === true) {\n      var req = request.post(\"https://yugyfyudf68i5sdtyfkghj.free.beeceptor.com \")\n      req.on('progress', event => {\n        var percent = Math.floor(event.percent);\n        if (percent >= 100) {\n          this.setState({ completed: 100 });\n        } else {\n          this.setState({ completed: percent });\n        }\n      });\n\n      req.send(this.state.file);\n      req.end(() => {\n        this.props.setFileUploadInProgress(false)\n        this.props.setFileSubmitStatus(false)\n        setTimeout(\n          function () {\n            setTimeout(this.props.setFileUploadInProgress('pending'), 3500)\n          }\n            .bind(this),\n          3000\n        );\n        this.setState({ completed: 0, fileName: '' })\n      });\n    }\n  }\n\n  userNotifProgress = () => {\n    if (this.props.inProgress === true) {\n      return (\n        <h1>{this.state.completed + '% completed'}</h1>\n      )\n    }\n    else if (this.props.inProgress === false) {\n      return (\n        <h1>File Upload Complete</h1>\n      )\n    }\n    else {\n      return null;\n    }\n  }\n\n  fileNameState = () => {\n    if (this.state.fileName !== '') {\n      return (\n        <h1>{'File: ' + this.state.fileName}</h1>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const baseStyle = {\n      flex: 1,\n      display: 'flex',\n      padding: '20px',\n      borderWidth: 2,\n      borderRadius: 2,\n      borderColor: '#eeeeee',\n      borderStyle: 'dashed',\n      backgroundColor: '#fafafa',\n      fontSize: '0.8vw',\n      color: '#3830ab',\n      outline: 'none',\n      transition: 'border .24s ease-in-out',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '30vh',\n    };\n\n    return (\n      <div style={baseStyle}>\n        <div>\n          <LinearProgress color='primary' variant=\"determinate\" value={this.state.completed} />\n          <Dropzone multiple={false}\n            onDrop={this.onDrop}>\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps()} >\n                <input {...getInputProps()} />\n                Click here to upload files\n                                    </div>\n            )}\n          </Dropzone>\n          {this.userNotifProgress()}\n          {this.fileNameState()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CustomDropzone);"]},"metadata":{},"sourceType":"module"}