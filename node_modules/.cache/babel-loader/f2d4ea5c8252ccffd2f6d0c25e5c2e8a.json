{"ast":null,"code":"//Styling of Activity/Audit Log Activity Column\nexport const activityColor = activity => {\n  if (activity.includes('Deleted')) {\n    return 'red';\n  } else if (activity.includes('Added')) {\n    return 'green';\n  } else if (activity.includes('Edited')) {\n    return 'blue';\n  }\n}; //Get the Current Date and Time\n\nexport const getCurrentDateTime = () => {\n  var today = new Date();\n  var dd = String(today.getDate()).padStart(2, '0');\n  var mm = String(today.getMonth() + 1).padStart(2, '0');\n  var yyyy = today.getFullYear();\n  var hh = String(today.getHours()).padStart(2, '0');\n  var min = String(today.getMinutes()).padStart(2, '0');\n  var ss = String(today.getSeconds()).padStart(2, '0');\n  return today = mm + '/' + dd + '/' + yyyy + ' ' + hh + ':' + min + ':' + ss;\n}; //Styling of Document Repository Status Column\n\nexport const statusColor = status => {\n  if (status === 'live') {\n    return 'green';\n  }\n\n  if (status === 'pending') {\n    return '#c28e00';\n  }\n\n  if (status === 'expired') {\n    return 'red';\n  }\n}; //Checks whether a Code Input is Valid\n\nexport const isValidCode = codeString => {\n  if (/^[A-Z]{2}/.test(codeString)) {\n    return true;\n  } else {\n    return false;\n  }\n}; //Checks whether a Date Input is Valid\n\nexport const isValidDate = dateString => {\n  if (!/^(\\d{2}|\\d{1})\\/(\\d{2}|\\d{1})\\/\\d{4}$/.test(dateString)) return false;\n  var parts = dateString.split(\"/\");\n  var day = parseInt(parts[0], 10);\n  var month = parseInt(parts[0], 10);\n  var year = parseInt(parts[2], 10);\n  if (year < 1000 || year > 3000 || month === 0 || month > 12) return false;\n  var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (year % 400 === 0 || year % 100 !== 0 && year % 4 === 0) monthLength[1] = 29;\n  return day > 0 && day <= monthLength[month - 1];\n};","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/globalFunctions.js"],"names":["activityColor","activity","includes","getCurrentDateTime","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hh","getHours","min","getMinutes","ss","getSeconds","statusColor","status","isValidCode","codeString","test","isValidDate","dateString","parts","split","day","parseInt","month","year","monthLength"],"mappings":"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","sourcesContent":["//Styling of Activity/Audit Log Activity Column\nexport const activityColor = (activity) => {\n    if (activity.includes('Deleted')) {\n        return 'red';\n    }\n    else if (activity.includes('Added')) {\n        return 'green';\n    }\n    else if (activity.includes('Edited')) {\n        return 'blue';\n    }\n}\n\n//Get the Current Date and Time\nexport const getCurrentDateTime = () => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    var hh = String(today.getHours()).padStart(2, '0');\n    var min = String(today.getMinutes()).padStart(2, '0');\n    var ss = String(today.getSeconds()).padStart(2, '0');\n    return today = mm + '/' + dd + '/' + yyyy + ' ' + hh + ':' + min + ':' + ss;\n}\n\n//Styling of Document Repository Status Column\nexport const statusColor = (status) => {\n    if (status === 'live') {\n        return 'green';\n    }\n    if (status === 'pending') {\n        return '#c28e00';\n    }\n    if (status === 'expired') {\n        return 'red';\n    }\n}\n\n//Checks whether a Code Input is Valid\nexport const isValidCode = (codeString) => {\n    if (/^[A-Z]{2}/.test(codeString)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\n//Checks whether a Date Input is Valid\nexport const isValidDate = (dateString) => {\n    if (!/^(\\d{2}|\\d{1})\\/(\\d{2}|\\d{1})\\/\\d{4}$/.test(dateString))\n        return false;\n\n    var parts = dateString.split(\"/\");\n    var day = parseInt(parts[0], 10);\n    var month = parseInt(parts[0], 10);\n    var year = parseInt(parts[2], 10);\n\n    if (year < 1000 || year > 3000 || month === 0 || month > 12)\n        return false;\n\n    var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    if (year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0))\n        monthLength[1] = 29;\n\n    return day > 0 && day <= monthLength[month - 1];\n};"]},"metadata":{},"sourceType":"module"}