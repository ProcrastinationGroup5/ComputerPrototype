{"ast":null,"code":"var _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/TaskDetails/TaskDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.editTasks.tasksVar,\n    tasksLength: state.editTasks.tasksLength,\n    selectedTask: state.setTaskSelected.taskSelectedVar\n  };\n};\n\nclass TaskDetails extends Component {\n  constructor() {\n    super();\n\n    this.bgColor = index => {\n      if (this.state.selectedTaskDetailRow === '') {\n        return 'white';\n      }\n\n      if (this.state.selectedTaskDetailRow === index) {\n        return '#d1d1d1';\n      } else {\n        return 'white';\n      }\n    };\n\n    this.handleChange = index => {\n      if (this.state.selectedTaskDetailRow !== index) {\n        this.setState({\n          selectedTaskDetailRow: index\n        });\n      } else {\n        this.setState({\n          selectedTaskDetailRow: ''\n        });\n      }\n    };\n\n    this.handleSubtaskChange = (i, event) => {\n      const newSubtasks = this.state.subtasks.slice();\n      newSubtasks[i] = event.target.value;\n      this.setState({\n        subtasks: newSubtasks\n      });\n    };\n\n    this.state = {\n      selectedTaskDetailRow: '',\n      numberAdditionalSubtasks: 0,\n      additionalSubtasks: new Array(this.numberAdditionalSubtasks)\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"taskDetailsInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.tasks[this.props.selectedTask].name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Due Date: \", this.props.tasks[this.props.selectedTask].date), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.props.tasks[this.props.selectedTask].subtasks.map((subtask, index) => React.createElement(TableRow, {\n      key: index,\n      onClick: event => this.handleChange(index),\n      style: {\n        backgroundColor: this.bgColor(index)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, subtask))))));\n  }\n\n}\n\nexport default connect(mapStateToProps)(TaskDetails);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/TaskDetails/TaskDetails.js"],"names":["React","Component","connect","Table","TableBody","TableCell","TableRow","mapStateToProps","state","tasks","editTasks","tasksVar","tasksLength","selectedTask","setTaskSelected","taskSelectedVar","TaskDetails","constructor","bgColor","index","selectedTaskDetailRow","handleChange","setState","handleSubtaskChange","i","event","newSubtasks","subtasks","slice","target","value","numberAdditionalSubtasks","additionalSubtasks","Array","render","props","name","date","map","subtask","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst mapStateToProps = state => {\n    return {\n        tasks: state.editTasks.tasksVar,\n        tasksLength: state.editTasks.tasksLength,\n        selectedTask: state.setTaskSelected.taskSelectedVar\n    }\n}\n\nclass TaskDetails extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            selectedTaskDetailRow: '',\n            numberAdditionalSubtasks: 0,\n            additionalSubtasks: new Array(this.numberAdditionalSubtasks)\n        }\n    }\n\n    bgColor = (index) => {\n        if (this.state.selectedTaskDetailRow === '') {\n            return 'white';\n        }\n        if (this.state.selectedTaskDetailRow === index) {\n            return '#d1d1d1';\n        } else {\n            return 'white';\n        }\n    }\n\n    handleChange = (index) => {\n        if (this.state.selectedTaskDetailRow !== index) {\n            this.setState({\n                selectedTaskDetailRow: index\n            })\n        } else {\n            this.setState({\n                selectedTaskDetailRow: ''\n            })\n        }\n    }\n\n    handleSubtaskChange = (i, event) => {\n\n        const newSubtasks = this.state.subtasks.slice()\n        newSubtasks[i] = event.target.value\n        this.setState({ subtasks: newSubtasks })\n    }\n\n    render() {\n\n        return (\n            <div className='taskDetailsInfo'>\n                <h1>{this.props.tasks[this.props.selectedTask].name}</h1>\n                <h2>Due Date: {this.props.tasks[this.props.selectedTask].date}</h2>\n                <Table>\n                    <TableBody>\n                        {this.props.tasks[this.props.selectedTask].subtasks.map((subtask, index) => (\n                            <TableRow key={index} onClick={event => this.handleChange(index)} style={{ backgroundColor: this.bgColor(index) }}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {subtask}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(TaskDetails)"]},"metadata":{},"sourceType":"module"}