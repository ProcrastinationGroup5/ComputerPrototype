{"ast":null,"code":"var _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/Visualisation/Visualisation.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Circle } from 'react-shapes';\n\nconst mapStateToProps = state => {\n  console.log(state.editTasks.tasksVar);\n  return {\n    tasks: state.editTasks.tasksVar\n  };\n};\n\nclass Visualisation extends Component {\n  constructor() {\n    super();\n\n    this.iterativeTaskVisualiation = () => {\n      for (let i = 0; i < this.props.tasks.length; i++) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(Circle, {\n          r: 50,\n          fill: {\n            color: '#2409ba'\n          },\n          stroke: {\n            color: '#E65243'\n          },\n          strokeWidth: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.state = {\n      tasks: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log('cdu trigger');\n\n    if (prevProps.tasks !== this.props.tasks) {\n      console.log('newProps');\n      this.setState({\n        tasks: this.props.tasks\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.iterativeTaskVisualiation());\n  }\n\n}\n\nexport default connect(mapStateToProps)(Visualisation);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/Visualisation/Visualisation.js"],"names":["React","Component","connect","Circle","mapStateToProps","state","console","log","editTasks","tasksVar","tasks","Visualisation","constructor","iterativeTaskVisualiation","i","props","length","color","componentDidUpdate","prevProps","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAN,CAAgBC,QAA5B;AACA,SAAO;AACHC,IAAAA,KAAK,EAAEL,KAAK,CAACG,SAAN,CAAgBC;AADpB,GAAP;AAGH,CALD;;AAOA,MAAME,aAAN,SAA4BV,SAA5B,CAAsC;AAElCW,EAAAA,WAAW,GAAG;AACV;;AADU,SAOdC,yBAPc,GAOc,MAAM;AAC9B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWL,KAAX,CAAiBM,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAC9C,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAQ,UAAA,CAAC,EAAE,EAAX;AAAe,UAAA,IAAI,EAAE;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAArB;AAA2C,UAAA,MAAM,EAAE;AAAEA,YAAAA,KAAK,EAAE;AAAT,WAAnD;AAAyE,UAAA,WAAW,EAAE,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAC+F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD/F,CADJ;AAKH;AACJ,KAfa;;AAEV,SAAKZ,KAAL,GAAa;AACTK,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAYDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzBb,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,QAAIY,SAAS,CAACT,KAAV,KAAkB,KAAKK,KAAL,CAAWL,KAAjC,EAAuC;AACnCJ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAKa,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAC,KAAKK,KAAL,CAAWL;AAAlB,OAAd;AACH;AACJ;;AAEDW,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,yBAAL,EADL,CADJ;AAKH;;AAjCiC;;AAoCtC,eAAeX,OAAO,CAACE,eAAD,CAAP,CAAyBO,aAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Circle } from 'react-shapes';\n\nconst mapStateToProps = state => {\n    console.log(state.editTasks.tasksVar)\n    return {\n        tasks: state.editTasks.tasksVar\n    }\n}\n\nclass Visualisation extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            tasks: []\n        }\n    }\n\n    iterativeTaskVisualiation = () => {\n        for (let i = 0; i < this.props.tasks.length; i++) {\n            return (\n                <div>\n                    <Circle r={50} fill={{ color: '#2409ba' }} stroke={{ color: '#E65243' }} strokeWidth={3} /><br/>\n                </div>\n            )\n        }\n    }\n\n    componentDidUpdate(prevProps){\n        console.log('cdu trigger')\n        if (prevProps.tasks!==this.props.tasks){\n            console.log('newProps')\n            this.setState({tasks:this.props.tasks})\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.iterativeTaskVisualiation()}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Visualisation)"]},"metadata":{},"sourceType":"module"}