{"ast":null,"code":"import { ADD_NEW_TASK, DISPLAY_ANT_BOOL_FLIP, DISPLAY_TASK_INFO_FLIP, SET_TASK_SELECTED } from './constants';\nimport { tasks } from './Data/tasks'; //EditTasks\n\nconst initialStateTasks = {\n  tasksVar: tasks,\n  tasksLength: 0\n};\nexport const editTasks = (state = initialStateTasks, action = {}) => {\n  switch (action.type) {\n    case ADD_NEW_TASK:\n      return Object.assign({}, state, {\n        tasksVar: [...state.tasksVar, action.payload],\n        tasksLength: state.tasksLength + 1\n      });\n\n    default:\n      return state;\n  }\n}; //Display ANT Bool\n\nconst initialStateDisplayANTBool = {\n  displayANTBoolVar: false\n};\nexport const displayANTBool = (state = initialStateDisplayANTBool, action = {}) => {\n  switch (action.type) {\n    case DISPLAY_ANT_BOOL_FLIP:\n      return Object.assign({}, state, {\n        displayANTBoolVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //Display Task Info Bool\n\nconst initialStateTaskInfoBool = {\n  displayTaskInfoBoolVar: false\n};\nexport const displayTaskInfoBool = (state = initialStateTaskInfoBool, action = {}) => {\n  switch (action.type) {\n    case DISPLAY_TASK_INFO_FLIP:\n      return Object.assign({}, state, {\n        displayTaskInfoBoolVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //Set Task Selected\n\nconst initialStateTaskSelected = {\n  taskSelectedVar: -1\n};\nexport const taskSelected = (state = initialStateTaskSelected, action = {}) => {\n  switch (action.type) {\n    case SET_TASK_SELECTED:\n      return Object.assign({}, state, {\n        taskSelectedVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/reducers.js"],"names":["ADD_NEW_TASK","DISPLAY_ANT_BOOL_FLIP","DISPLAY_TASK_INFO_FLIP","SET_TASK_SELECTED","tasks","initialStateTasks","tasksVar","tasksLength","editTasks","state","action","type","Object","assign","payload","initialStateDisplayANTBool","displayANTBoolVar","displayANTBool","initialStateTaskInfoBool","displayTaskInfoBoolVar","displayTaskInfoBool","initialStateTaskSelected","taskSelectedVar","taskSelected"],"mappings":"AAAA,SACIA,YADJ,EACkBC,qBADlB,EACyCC,sBADzC,EACiEC,iBADjE,QAEO,aAFP;AAIA,SAASC,KAAT,QAAsB,cAAtB,C,CAEA;;AACA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,QAAQ,EAAEF,KADY;AAEtBG,EAAAA,WAAW,EAAE;AAFS,CAA1B;AAKA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGJ,iBAAT,EAA4BK,MAAM,GAAG,EAArC,KAA4C;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,YAAL;AACI,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EACHJ,KADG,EAEH;AAAEH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoBI,MAAM,CAACI,OAA3B,CAAZ;AACAP,QAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,GAAkB;AAD/B,OAFG,CAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVM,C,CAYP;;AACA,MAAMM,0BAA0B,GAAG;AAC/BC,EAAAA,iBAAiB,EAAE;AADY,CAAnC;AAIA,OAAO,MAAMC,cAAc,GAAG,CAACR,KAAK,GAAGM,0BAAT,EAAqCL,MAAM,GAAG,EAA9C,KAAqD;AAC/E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,qBAAL;AACI,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEO,QAAAA,iBAAiB,EAAEN,MAAM,CAACI;AAA5B,OAAzB,CAAP;;AACJ;AACI,aAAOL,KAAP;AAJR;AAMH,CAPM,C,CASP;;AAEA,MAAMS,wBAAwB,GAAG;AAC7BC,EAAAA,sBAAsB,EAAE;AADK,CAAjC;AAIA,OAAO,MAAMC,mBAAmB,GAAG,CAACX,KAAK,GAAGS,wBAAT,EAAmCR,MAAM,GAAG,EAA5C,KAAmD;AAClF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,sBAAL;AACI,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEU,QAAAA,sBAAsB,EAAET,MAAM,CAACI;AAAjC,OAAzB,CAAP;;AACJ;AACI,aAAOL,KAAP;AAJR;AAMH,CAPM,C,CASP;;AAEA,MAAMY,wBAAwB,GAAG;AAC7BC,EAAAA,eAAe,EAAE,CAAC;AADW,CAAjC;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACd,KAAK,GAAGY,wBAAT,EAAmCX,MAAM,GAAG,EAA5C,KAAmD;AAC3E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,iBAAL;AACI,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAAEa,QAAAA,eAAe,EAAEZ,MAAM,CAACI;AAA1B,OAAzB,CAAP;;AACJ;AACI,aAAOL,KAAP;AAJR;AAMH,CAPM","sourcesContent":["import {\n    ADD_NEW_TASK, DISPLAY_ANT_BOOL_FLIP, DISPLAY_TASK_INFO_FLIP, SET_TASK_SELECTED\n} from './constants';\n\nimport { tasks } from './Data/tasks'\n\n//EditTasks\nconst initialStateTasks = {\n    tasksVar: tasks,\n    tasksLength: 0\n}\n\nexport const editTasks = (state = initialStateTasks, action = {}) => {\n    switch (action.type) {\n        case ADD_NEW_TASK:\n            return Object.assign({},\n                state,\n                { tasksVar: [...state.tasksVar, action.payload],\n                tasksLength: state.tasksLength+1});\n        default:\n            return state;\n    }\n}\n\n//Display ANT Bool\nconst initialStateDisplayANTBool = {\n    displayANTBoolVar: false\n}\n\nexport const displayANTBool = (state = initialStateDisplayANTBool, action = {}) => {\n    switch (action.type) {\n        case DISPLAY_ANT_BOOL_FLIP:\n            return Object.assign({}, state, { displayANTBoolVar: action.payload })\n        default:\n            return state;\n    }\n}\n\n//Display Task Info Bool\n\nconst initialStateTaskInfoBool = {\n    displayTaskInfoBoolVar: false\n}\n\nexport const displayTaskInfoBool = (state = initialStateTaskInfoBool, action = {}) => {\n    switch (action.type) {\n        case DISPLAY_TASK_INFO_FLIP:\n            return Object.assign({}, state, { displayTaskInfoBoolVar: action.payload })\n        default:\n            return state;\n    }\n}\n\n//Set Task Selected\n\nconst initialStateTaskSelected = {\n    taskSelectedVar: -1\n}\n\nexport const taskSelected = (state = initialStateTaskSelected, action = {}) => {\n    switch (action.type) {\n        case SET_TASK_SELECTED:\n            return Object.assign({}, state, { taskSelectedVar: action.payload })\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}