{"ast":null,"code":"var _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/Home/Inputs.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { logIn, setUser, setUserDept } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    adminAccessControlInfo: state.adminAccessControlInfoData.adminAccessControlInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logIn: text => dispatch(logIn(text)),\n    setUser: user => dispatch(setUser(user)),\n    setUserDept: dept => dispatch(setUserDept(dept))\n  };\n};\n\nclass Inputs extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = () => {\n      if (this.state.resetNameBool === true || this.state.resetPasswordBool === true) {\n        return window.alert('Please fill in all required fields.');\n      } else {\n        let logInSuccess = false;\n\n        for (let i = 0; i < this.props.adminAccessControlInfo.length; i++) {\n          if (this.props.adminAccessControlInfo[i].name === this.state.name && this.props.adminAccessControlInfo[i].password === this.state.password) {\n            logInSuccess = true;\n            break;\n          }\n        }\n\n        if (logInSuccess === true) {\n          this.props.setUser(this.state.name);\n\n          for (let i = 0; i < this.props.adminAccessControlInfo.length; i++) {\n            if (this.props.adminAccessControlInfo[i].name === this.state.name) {\n              this.props.setUserDept(this.props.adminAccessControlInfo[i].dept);\n              break;\n            }\n          }\n\n          this.props.logIn(true);\n        } else {\n          window.alert('Please input the correct name and password');\n        }\n\n        this.setState({\n          resetNameBool: true,\n          resetPasswordBool: true,\n          name: '',\n          password: ''\n        });\n      }\n    };\n\n    this.resetInput = (bool, string, onClickFunction, name) => {\n      if (bool === true) {\n        return React.createElement(\"input\", {\n          name: name,\n          style: {\n            width: \"100%\",\n            fontSize: '0.8vw'\n          },\n          id: \"txt\",\n          value: string,\n          type: \"text\",\n          onChange: onClickFunction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          name: name,\n          style: {\n            width: \"100%\",\n            fontSize: '0.8vw'\n          },\n          id: \"txt\",\n          type: \"text\",\n          onChange: onClickFunction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      resetNameBool: true,\n      resetPasswordBool: true,\n      name: '',\n      password: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    if (name === 'name') {\n      this.setState({\n        resetNameBool: false\n      });\n    } else if (name === 'password') {\n      this.setState({\n        resetPasswordBool: false\n      });\n    }\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw',\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Username:\", this.resetInput(this.state.resetNameBool, '', this.handleInputChange, 'name')), React.createElement(\"label\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw',\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Password:\", this.resetInput(this.state.resetPasswordBool, '', this.handleInputChange, 'password')), React.createElement(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      style: {\n        width: '100%',\n        fontSize: '0.8vw'\n      },\n      onClick: () => {\n        this.handleSubmit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputs);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/Home/Inputs.js"],"names":["React","Component","Button","connect","logIn","setUser","setUserDept","mapStateToProps","state","adminAccessControlInfo","adminAccessControlInfoData","mapDispatchToProps","dispatch","text","user","dept","Inputs","constructor","handleSubmit","resetNameBool","resetPasswordBool","window","alert","logInSuccess","i","props","length","name","password","setState","resetInput","bool","string","onClickFunction","width","fontSize","handleInputChange","bind","event","target","value","render","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,WAAzB,QAA4C,YAA5C;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,sBAAsB,EAAED,KAAK,CAACE,0BAAN,CAAiCD;AADtD,GAAP;AAGH,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHR,IAAAA,KAAK,EAAGS,IAAD,IAAUD,QAAQ,CAACR,KAAK,CAACS,IAAD,CAAN,CADtB;AAEHR,IAAAA,OAAO,EAAGS,IAAD,IAAUF,QAAQ,CAACP,OAAO,CAACS,IAAD,CAAR,CAFxB;AAGHR,IAAAA,WAAW,EAAGS,IAAD,IAAUH,QAAQ,CAACN,WAAW,CAACS,IAAD,CAAZ;AAH5B,GAAP;AAKH,CAND;;AASA,MAAMC,MAAN,SAAqBf,SAArB,CAA+B;AAC3BgB,EAAAA,WAAW,GAAG;AACV;;AADU,SA8BdC,YA9Bc,GA8BC,MAAM;AAEjB,UAAI,KAAKV,KAAL,CAAWW,aAAX,KAA6B,IAA7B,IAAqC,KAAKX,KAAL,CAAWY,iBAAX,KAAiC,IAA1E,EAAgF;AAC5E,eAAOC,MAAM,CAACC,KAAP,CAAa,qCAAb,CAAP;AACH,OAFD,MAGK;AACD,YAAIC,YAAY,GAAG,KAAnB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWhB,sBAAX,CAAkCiB,MAAtD,EAA8DF,CAAC,EAA/D,EAAmE;AAC/D,cAAI,KAAKC,KAAL,CAAWhB,sBAAX,CAAkCe,CAAlC,EAAqCG,IAArC,KAA8C,KAAKnB,KAAL,CAAWmB,IAAzD,IAAiE,KAAKF,KAAL,CAAWhB,sBAAX,CAAkCe,CAAlC,EAAqCI,QAArC,KAAkD,KAAKpB,KAAL,CAAWoB,QAAlI,EAA4I;AACxIL,YAAAA,YAAY,GAAG,IAAf;AACA;AACH;AACJ;;AACD,YAAIA,YAAY,KAAK,IAArB,EAA2B;AACvB,eAAKE,KAAL,CAAWpB,OAAX,CAAmB,KAAKG,KAAL,CAAWmB,IAA9B;;AACA,eAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWhB,sBAAX,CAAkCiB,MAAtD,EAA8DF,CAAC,EAA/D,EAAmE;AAC/D,gBAAI,KAAKC,KAAL,CAAWhB,sBAAX,CAAkCe,CAAlC,EAAqCG,IAArC,KAA8C,KAAKnB,KAAL,CAAWmB,IAA7D,EAAmE;AAC/D,mBAAKF,KAAL,CAAWnB,WAAX,CAAuB,KAAKmB,KAAL,CAAWhB,sBAAX,CAAkCe,CAAlC,EAAqCT,IAA5D;AACA;AACH;AACJ;;AACD,eAAKU,KAAL,CAAWrB,KAAX,CAAiB,IAAjB;AACH,SATD,MAUK;AACDiB,UAAAA,MAAM,CAACC,KAAP,CAAa,4CAAb;AACH;;AACD,aAAKO,QAAL,CAAc;AACVV,UAAAA,aAAa,EAAE,IADL;AAEVC,UAAAA,iBAAiB,EAAE,IAFT;AAGVO,UAAAA,IAAI,EAAE,EAHI;AAIVC,UAAAA,QAAQ,EAAE;AAJA,SAAd;AAOH;AACJ,KAhEa;;AAAA,SAkEdE,UAlEc,GAkED,CAACC,IAAD,EAAOC,MAAP,EAAeC,eAAf,EAAgCN,IAAhC,KAAyC;AAClD,UAAII,IAAI,KAAK,IAAb,EAAmB;AACf,eAAO;AAAO,UAAA,IAAI,EAAEJ,IAAb;AAAmB,UAAA,KAAK,EAAE;AAAEO,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B,WAA1B;AAAgE,UAAA,EAAE,EAAC,KAAnE;AAAyE,UAAA,KAAK,EAAEH,MAAhF;AAAwF,UAAA,IAAI,EAAC,MAA7F;AAAoG,UAAA,QAAQ,EAAEC,eAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAGK;AACD,eAAO;AAAO,UAAA,IAAI,EAAEN,IAAb;AAAmB,UAAA,KAAK,EAAE;AAAEO,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B,WAA1B;AAAgE,UAAA,EAAE,EAAC,KAAnE;AAAyE,UAAA,IAAI,EAAC,MAA9E;AAAqF,UAAA,QAAQ,EAAEF,eAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KAzEa;;AAEV,SAAKzB,KAAL,GAAa;AACTW,MAAAA,aAAa,EAAE,IADN;AAETC,MAAAA,iBAAiB,EAAE,IAFV;AAGTO,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAOA,SAAKQ,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDD,EAAAA,iBAAiB,CAACE,KAAD,EAAQ;AACrB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMb,IAAI,GAAGY,MAAM,CAACZ,IAApB;;AAEA,QAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB,WAAKE,QAAL,CAAc;AAAEV,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACH,KAFD,MAGK,IAAIQ,IAAI,KAAK,UAAb,EAAyB;AAC1B,WAAKE,QAAL,CAAc;AAAET,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACH;;AAED,SAAKS,QAAL,CAAc;AACV,OAACF,IAAD,GAAQa;AADE,KAAd;AAIH;;AA+CDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAE;AAAEP,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,QAAQ,EAAE,OAA3B;AAAoCO,QAAAA,KAAK,EAAE;AAA3C,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEa,KAAKZ,UAAL,CAAgB,KAAKtB,KAAL,CAAWW,aAA3B,EAA0C,EAA1C,EAA8C,KAAKiB,iBAAnD,EAAsE,MAAtE,CAFb,CADJ,EAKI;AAAO,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,QAAQ,EAAE,OAA3B;AAAoCO,QAAAA,KAAK,EAAE;AAA3C,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEa,KAAKZ,UAAL,CAAgB,KAAKtB,KAAL,CAAWY,iBAA3B,EAA8C,EAA9C,EAAkD,KAAKgB,iBAAvD,EAA0E,UAA1E,CAFb,CALJ,EASI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,OAAO,EAAC,UAA7B;AAAwC,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,QAAQ,EAAE;AAA3B,OAA/C;AAAqF,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKjB,YAAL;AAAqB,OAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,CADJ,CADJ;AAiBH;;AA9F0B;;AAiG/B,eAAef,OAAO,CAACI,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CK,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { logIn, setUser, setUserDept } from '../actions';\n\nconst mapStateToProps = state => {\n    return {\n        adminAccessControlInfo: state.adminAccessControlInfoData.adminAccessControlInfo\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logIn: (text) => dispatch(logIn(text)),\n        setUser: (user) => dispatch(setUser(user)),\n        setUserDept: (dept) => dispatch(setUserDept(dept))\n    }\n}\n\n\nclass Inputs extends Component {\n    constructor() {\n        super()\n        this.state = {\n            resetNameBool: true,\n            resetPasswordBool: true,\n            name: '',\n            password: '',\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        if (name === 'name') {\n            this.setState({ resetNameBool: false })\n        }\n        else if (name === 'password') {\n            this.setState({ resetPasswordBool: false })\n        }\n\n        this.setState({\n            [name]: value\n        });\n\n    }\n\n    handleSubmit = () => {\n\n        if (this.state.resetNameBool === true || this.state.resetPasswordBool === true) {\n            return window.alert('Please fill in all required fields.')\n        }\n        else {\n            let logInSuccess = false;\n            for (let i = 0; i < this.props.adminAccessControlInfo.length; i++) {\n                if (this.props.adminAccessControlInfo[i].name === this.state.name && this.props.adminAccessControlInfo[i].password === this.state.password) {\n                    logInSuccess = true;\n                    break;\n                }\n            }\n            if (logInSuccess === true) {\n                this.props.setUser(this.state.name)\n                for (let i = 0; i < this.props.adminAccessControlInfo.length; i++) {\n                    if (this.props.adminAccessControlInfo[i].name === this.state.name) {\n                        this.props.setUserDept(this.props.adminAccessControlInfo[i].dept)\n                        break;\n                    }\n                }\n                this.props.logIn(true);\n            }\n            else {\n                window.alert('Please input the correct name and password')\n            }\n            this.setState({\n                resetNameBool: true,\n                resetPasswordBool: true,\n                name: '',\n                password: '',\n            })\n\n        }\n    }\n\n    resetInput = (bool, string, onClickFunction, name) => {\n        if (bool === true) {\n            return <input name={name} style={{ width: \"100%\", fontSize: '0.8vw' }} id='txt' value={string} type='text' onChange={onClickFunction}></input>\n        }\n        else {\n            return <input name={name} style={{ width: \"100%\", fontSize: '0.8vw' }} id='txt' type='text' onChange={onClickFunction}></input>\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label style={{ width: \"100%\", fontSize: '0.8vw', color: 'white' }}>\n                        Username:\n                                {this.resetInput(this.state.resetNameBool, '', this.handleInputChange, 'name')}\n                    </label>\n                    <label style={{ width: \"100%\", fontSize: '0.8vw', color: 'white' }}>\n                        Password:\n                                {this.resetInput(this.state.resetPasswordBool, '', this.handleInputChange, 'password')}\n                    </label>\n                    <Button size='small' variant=\"outlined\" style={{ width: '100%', fontSize: '0.8vw' }} onClick={() => { this.handleSubmit() }}>\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputs)"]},"metadata":{},"sourceType":"module"}