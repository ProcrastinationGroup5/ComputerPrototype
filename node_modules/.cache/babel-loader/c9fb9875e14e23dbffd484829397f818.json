{"ast":null,"code":"var _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/Visualisation/Visualisation.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Circle } from 'react-shapes';\nimport { displayTaskInfoFlip, displayANTBoolFlip } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.editTasks.tasksVar,\n    tasksLength: state.editTasks.tasksLength\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayTaskInfoFlip: bool => dispatch(displayTaskInfoFlip(bool)),\n    displayANTBoolFlip: bool => dispatch(displayTaskInfoFlip(bool))\n  };\n};\n\nclass Visualisation extends Component {\n  render() {\n    const tasksList = [];\n\n    for (let i = 0; i < this.props.tasksLength; i++) {\n      {\n        console.log(this.props.tasks[i].subtasks.length * 40);\n      }\n      tasksList.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: console.log('hello'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.tasks[i].name), React.createElement(Circle, {\n        r: this.props.tasks[i].subtasks.length * 40,\n        fill: {\n          color: '#2409ba'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, tasksList);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Visualisation);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/Visualisation/Visualisation.js"],"names":["React","Component","connect","Circle","displayTaskInfoFlip","displayANTBoolFlip","mapStateToProps","state","tasks","editTasks","tasksVar","tasksLength","mapDispatchToProps","dispatch","bool","Visualisation","render","tasksList","i","props","console","log","subtasks","length","push","name","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SACIC,mBADJ,EAEIC,kBAFJ,QAGO,YAHP;;AAKA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBC,QADpB;AAEHC,IAAAA,WAAW,EAAEJ,KAAK,CAACE,SAAN,CAAgBE;AAF1B,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHT,IAAAA,mBAAmB,EAAGU,IAAD,IAAUD,QAAQ,CAACT,mBAAmB,CAACU,IAAD,CAApB,CADpC;AAEHT,IAAAA,kBAAkB,EAAGS,IAAD,IAAUD,QAAQ,CAACT,mBAAmB,CAACU,IAAD,CAApB;AAFnC,GAAP;AAIH,CALD;;AAOA,MAAMC,aAAN,SAA4Bd,SAA5B,CAAsC;AAElCe,EAAAA,MAAM,GAAG;AAEL,UAAMC,SAAS,GAAG,EAAlB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWR,WAA/B,EAA4CO,CAAC,EAA7C,EAAiD;AAC7C;AAACE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWX,KAAX,CAAiBU,CAAjB,EAAoBI,QAApB,CAA6BC,MAA7B,GAAoC,EAAhD;AAAoD;AACrDN,MAAAA,SAAS,CAACO,IAAV,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAEJ,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwC,KAAKF,KAAL,CAAWX,KAAX,CAAiBU,CAAjB,EAAoBO,IAA5D,CADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,CAAC,EAAE,KAAKN,KAAL,CAAWX,KAAX,CAAiBU,CAAjB,EAAoBI,QAApB,CAA6BC,MAA7B,GAAoC,EAA/C;AAAmD,QAAA,IAAI,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAEqF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFrF,CADJ;AAMH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,SADL,CADJ;AAKH;;AArBiC;;AAwBtC,eAAef,OAAO,CAACI,eAAD,EAAiBM,kBAAjB,CAAP,CAA4CG,aAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Circle } from 'react-shapes';\nimport {\n    displayTaskInfoFlip,\n    displayANTBoolFlip\n} from '../actions'\n\nconst mapStateToProps = state => {\n    return {\n        tasks: state.editTasks.tasksVar,\n        tasksLength: state.editTasks.tasksLength\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        displayTaskInfoFlip: (bool) => dispatch(displayTaskInfoFlip(bool)),\n        displayANTBoolFlip: (bool) => dispatch(displayTaskInfoFlip(bool))\n    }\n}\n\nclass Visualisation extends Component {\n\n    render() {\n\n        const tasksList = [];\n\n        for (let i = 0; i < this.props.tasksLength; i++) {\n            {console.log(this.props.tasks[i].subtasks.length*40)}\n            tasksList.push(\n                <div>\n                    <button onClick={console.log('hello')}>{this.props.tasks[i].name}</button>\n                    <Circle r={this.props.tasks[i].subtasks.length*40} fill={{ color: '#2409ba' }} /><br />\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                {tasksList}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Visualisation)"]},"metadata":{},"sourceType":"module"}