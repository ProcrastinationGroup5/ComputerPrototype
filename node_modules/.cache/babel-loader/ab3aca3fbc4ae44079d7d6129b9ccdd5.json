{"ast":null,"code":"var _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/Visualisation/Visualisation.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Circle } from 'react-shapes';\nimport { displayTaskInfoFlip, displayANTBoolFlip, setTaskSelected } from '../actions';\nimport Button from '@material-ui/core/Button';\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.editTasks.tasksVar,\n    tasksLength: state.editTasks.tasksLength\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayTaskInfoFlip: bool => dispatch(displayTaskInfoFlip(bool)),\n    displayANTBoolFlip: bool => dispatch(displayANTBoolFlip(bool)),\n    setTaskSelected: int => dispatch(setTaskSelected(int))\n  };\n};\n\nclass Visualisation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.taskNameClicked = i => {\n      this.props.displayANTBoolFlip(false);\n      this.props.displayTaskInfoFlip(true);\n      this.props.setTaskSelected(i);\n    };\n\n    this.circleColor = i => {\n      if (this.props.tasks[i].difficulty == 'Easy') {\n        return '#fca503';\n      } else if (this.props.tasks[i].difficulty == 'Easy') {\n        return '#2409ba';\n      } else {\n        return '#fc0303';\n      }\n    };\n  }\n\n  render() {\n    const tasksList = [];\n\n    for (let i = 0; i < this.props.tasksLength; i++) {\n      tasksList.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, console.log(this.props.tasks[i].difficulty), React.createElement(Button, {\n        className: \"taskNameButton\",\n        onClick: () => {\n          this.taskNameClicked(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.props.tasks[i].name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Circle, {\n        r: this.props.tasks[i].subtasks.length * 40,\n        fill: {\n          color: this.circleColor(i)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, tasksList);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Visualisation);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/Visualisation/Visualisation.js"],"names":["React","Component","connect","Circle","displayTaskInfoFlip","displayANTBoolFlip","setTaskSelected","Button","mapStateToProps","state","tasks","editTasks","tasksVar","tasksLength","mapDispatchToProps","dispatch","bool","int","Visualisation","taskNameClicked","i","props","circleColor","difficulty","render","tasksList","push","console","log","name","subtasks","length","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SACIC,mBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,QAIO,YAJP;AAKA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBC,QADpB;AAEHC,IAAAA,WAAW,EAAEJ,KAAK,CAACE,SAAN,CAAgBE;AAF1B,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHX,IAAAA,mBAAmB,EAAGY,IAAD,IAAUD,QAAQ,CAACX,mBAAmB,CAACY,IAAD,CAApB,CADpC;AAEHX,IAAAA,kBAAkB,EAAGW,IAAD,IAAUD,QAAQ,CAACV,kBAAkB,CAACW,IAAD,CAAnB,CAFnC;AAGHV,IAAAA,eAAe,EAAGW,GAAD,IAASF,QAAQ,CAACT,eAAe,CAACW,GAAD,CAAhB;AAH/B,GAAP;AAKH,CAND;;AAQA,MAAMC,aAAN,SAA4BjB,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAElCkB,eAFkC,GAEfC,CAAD,IAAO;AACrB,WAAKC,KAAL,CAAWhB,kBAAX,CAA8B,KAA9B;AACA,WAAKgB,KAAL,CAAWjB,mBAAX,CAA+B,IAA/B;AACA,WAAKiB,KAAL,CAAWf,eAAX,CAA2Bc,CAA3B;AACH,KANiC;;AAAA,SAQlCE,WARkC,GAQnBF,CAAD,IAAO;AACjB,UAAI,KAAKC,KAAL,CAAWX,KAAX,CAAiBU,CAAjB,EAAoBG,UAApB,IAAkC,MAAtC,EAA6C;AACzC,eAAO,SAAP;AACH,OAFD,MAGK,IAAI,KAAKF,KAAL,CAAWX,KAAX,CAAiBU,CAAjB,EAAoBG,UAApB,IAAkC,MAAtC,EAA6C;AAC9C,eAAO,SAAP;AACH,OAFI,MAGA;AACD,eAAO,SAAP;AACH;AACJ,KAlBiC;AAAA;;AAoBlCC,EAAAA,MAAM,GAAG;AAEL,UAAMC,SAAS,GAAG,EAAlB;;AAEA,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWR,WAA/B,EAA4CO,CAAC,EAA7C,EAAiD;AAC7CK,MAAAA,SAAS,CAACC,IAAV,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWX,KAAX,CAAiBU,CAAjB,EAAoBG,UAAhC,CADL,EAEI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKJ,eAAL,CAAqBC,CAArB;AAAyB,SAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgF,KAAKC,KAAL,CAAWX,KAAX,CAAiBU,CAAjB,EAAoBS,IAApG,CAFJ,EAEsH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFtH,EAGI,oBAAC,MAAD;AAAQ,QAAA,CAAC,EAAE,KAAKR,KAAL,CAAWX,KAAX,CAAiBU,CAAjB,EAAoBU,QAApB,CAA6BC,MAA7B,GAAsC,EAAjD;AAAqD,QAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAKV,WAAL,CAAiBF,CAAjB;AAAT,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAGiG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHjG,CADJ;AAOH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKK,SADL,CADJ;AAKH;;AAvCiC;;AA0CtC,eAAevB,OAAO,CAACM,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CI,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Circle } from 'react-shapes';\nimport {\n    displayTaskInfoFlip,\n    displayANTBoolFlip,\n    setTaskSelected\n} from '../actions'\nimport Button from '@material-ui/core/Button';\n\nconst mapStateToProps = state => {\n    return {\n        tasks: state.editTasks.tasksVar,\n        tasksLength: state.editTasks.tasksLength\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        displayTaskInfoFlip: (bool) => dispatch(displayTaskInfoFlip(bool)),\n        displayANTBoolFlip: (bool) => dispatch(displayANTBoolFlip(bool)),\n        setTaskSelected: (int) => dispatch(setTaskSelected(int))\n    }\n}\n\nclass Visualisation extends Component {\n\n    taskNameClicked = (i) => {\n        this.props.displayANTBoolFlip(false)\n        this.props.displayTaskInfoFlip(true)\n        this.props.setTaskSelected(i)\n    }\n\n    circleColor = (i) => {\n        if (this.props.tasks[i].difficulty == 'Easy'){\n            return '#fca503'\n        }\n        else if (this.props.tasks[i].difficulty == 'Easy'){\n            return '#2409ba'\n        }\n        else {\n            return '#fc0303'\n        }\n    }\n\n    render() {\n\n        const tasksList = [];\n\n        for (let i = 0; i < this.props.tasksLength; i++) {\n            tasksList.push(\n                <div>\n                    {console.log(this.props.tasks[i].difficulty)}\n                    <Button className='taskNameButton' onClick={() => { this.taskNameClicked(i) }}>{this.props.tasks[i].name}</Button><br/>\n                    <Circle r={this.props.tasks[i].subtasks.length * 40} fill={{ color: this.circleColor(i) }} /><br />\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                {tasksList}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Visualisation)"]},"metadata":{},"sourceType":"module"}