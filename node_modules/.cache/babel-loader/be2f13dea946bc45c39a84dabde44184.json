{"ast":null,"code":"import { ADD_NEW_TASK, DISPLAY_ANT_BOOL_FLIP, DISPLAY_TASK_INFO_FLIP, SET_TASK_SELECTED, ADD_NEW_SUBTASK, COMPLETE_SUBTASK, COMPLETE_TASK, DISPLAY_CAL_BOOL_FLIP, HELP_BOOL_FLIP, INITIAL_HELP_BOOL } from './constants';\nimport { tasks } from './Data/tasks';\nimport update from 'react-addons-update'; //EditTasks\n\nconst initialStateTasks = {\n  tasksVar: tasks,\n  tasksLength: 0\n};\nexport const editTasks = (state = initialStateTasks, action = {}) => {\n  switch (action.type) {\n    case ADD_NEW_TASK:\n      return Object.assign({}, state, {\n        tasksVar: [...state.tasksVar, action.payload],\n        tasksLength: state.tasksLength + 1\n      });\n\n    case ADD_NEW_SUBTASK:\n      return update(state, {\n        tasksVar: {\n          [action.payload.index]: {\n            numberSubtasks: {\n              $set: state.tasksVar[action.payload.index].numberSubtasks + 1\n            },\n            subtasks: {\n              $set: [...state.tasksVar[action.payload.index].subtasks, ...action.payload.items]\n            }\n          }\n        }\n      });\n\n    case COMPLETE_SUBTASK:\n      return update(state, {\n        tasksVar: {\n          [action.payload.index]: {\n            numberSubtasks: {\n              $set: state.tasksVar[action.payload.index].numberSubtasks - 1\n            },\n            subtasks: {\n              $set: [...state.tasksVar[action.payload.index].subtasks.filter(function (info) {\n                return info !== action.payload.item;\n              })]\n            }\n          }\n        }\n      });\n\n    case COMPLETE_TASK:\n      return update(state, {\n        tasksLength: {\n          $set: state.tasksLength - 1\n        },\n        tasksVar: {\n          $set: [...state.tasksVar.filter(function (info) {\n            return info.name !== action.payload;\n          })]\n        }\n      });\n\n    default:\n      return state;\n  }\n}; //Display ANT Bool\n\nconst initialStateDisplayANTBool = {\n  displayANTBoolVar: false\n};\nexport const displayANTBool = (state = initialStateDisplayANTBool, action = {}) => {\n  switch (action.type) {\n    case DISPLAY_ANT_BOOL_FLIP:\n      return Object.assign({}, state, {\n        displayANTBoolVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //Display Task Info Bool\n\nconst initialStateTaskInfoBool = {\n  displayTaskInfoBoolVar: false\n};\nexport const displayTaskInfoBool = (state = initialStateTaskInfoBool, action = {}) => {\n  switch (action.type) {\n    case DISPLAY_TASK_INFO_FLIP:\n      return Object.assign({}, state, {\n        displayTaskInfoBoolVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //Display Calendar Bool\n\nconst initialStateDisplayCalBool = {\n  displayCalBoolVar: false\n};\nexport const displayCalBool = (state = initialStateDisplayCalBool, action = {}) => {\n  switch (action.type) {\n    case DISPLAY_CAL_BOOL_FLIP:\n      return Object.assign({}, state, {\n        displayCalBoolVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //Display Help Bool\n\nconst initialStateHelpBool = {\n  helpBoolVar: false\n};\nexport const helpBool = (state = initialStateHelpBool, action = {}) => {\n  switch (action.type) {\n    case INITIAL_HELP_BOOL:\n      return Object.assign({}, state, {\n        helpBoolVar: action.payload\n      });\n\n    case HELP_BOOL_FLIP:\n      return Object.assign({}, state, {\n        helpBoolVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //Set Task Selected\n\nconst initialStateTaskSelected = {\n  taskSelectedVar: -1\n};\nexport const setTaskSelected = (state = initialStateTaskSelected, action = {}) => {\n  switch (action.type) {\n    case SET_TASK_SELECTED:\n      return Object.assign({}, state, {\n        taskSelectedVar: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/ComputerPrototype/src/reducers.js"],"names":["ADD_NEW_TASK","DISPLAY_ANT_BOOL_FLIP","DISPLAY_TASK_INFO_FLIP","SET_TASK_SELECTED","ADD_NEW_SUBTASK","COMPLETE_SUBTASK","COMPLETE_TASK","DISPLAY_CAL_BOOL_FLIP","HELP_BOOL_FLIP","INITIAL_HELP_BOOL","tasks","update","initialStateTasks","tasksVar","tasksLength","editTasks","state","action","type","Object","assign","payload","index","numberSubtasks","$set","subtasks","items","filter","info","item","name","initialStateDisplayANTBool","displayANTBoolVar","displayANTBool","initialStateTaskInfoBool","displayTaskInfoBoolVar","displayTaskInfoBool","initialStateDisplayCalBool","displayCalBoolVar","displayCalBool","initialStateHelpBool","helpBoolVar","helpBool","initialStateTaskSelected","taskSelectedVar","setTaskSelected"],"mappings":"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","sourcesContent":["import {\n    ADD_NEW_TASK,\n    DISPLAY_ANT_BOOL_FLIP,\n    DISPLAY_TASK_INFO_FLIP,\n    SET_TASK_SELECTED,\n    ADD_NEW_SUBTASK,\n    COMPLETE_SUBTASK,\n    COMPLETE_TASK,\n    DISPLAY_CAL_BOOL_FLIP,\n    HELP_BOOL_FLIP,\n    INITIAL_HELP_BOOL\n} from './constants';\n\nimport { tasks } from './Data/tasks'\nimport update from 'react-addons-update';\n\n//EditTasks\nconst initialStateTasks = {\n    tasksVar: tasks,\n    tasksLength: 0\n}\n\nexport const editTasks = (state = initialStateTasks, action = {}) => {\n    switch (action.type) {\n        case ADD_NEW_TASK:\n            return Object.assign({},\n                state,\n                {\n                    tasksVar: [...state.tasksVar, action.payload],\n                    tasksLength: state.tasksLength + 1\n                });\n        case ADD_NEW_SUBTASK:\n            return update(state, {\n                tasksVar: {\n                    [action.payload.index]: {\n                        numberSubtasks:{\n                            $set: state.tasksVar[action.payload.index].numberSubtasks+1},\n                        subtasks: { $set: [...state.tasksVar[action.payload.index].subtasks, ...action.payload.items] }\n                    }\n                }\n            });\n        case COMPLETE_SUBTASK:\n            return update(state, {\n                tasksVar: {\n                    [action.payload.index]: {\n                        numberSubtasks:{\n                            $set: state.tasksVar[action.payload.index].numberSubtasks-1},\n                        subtasks: {\n                            $set:\n                                [...state.tasksVar[action.payload.index].subtasks.filter(function (info) {\n                                    return info !== action.payload.item\n                                })]\n                        }\n                    }\n                }\n            });\n        case COMPLETE_TASK:\n            return update(state, {\n                tasksLength:{\n                    $set: state.tasksLength-1},\n                tasksVar: {\n                    $set:\n                        [...state.tasksVar.filter(function (info) {\n                            return info.name !== action.payload\n                        })]\n                }\n            });\n        default:\n            return state;\n    }\n}\n\n//Display ANT Bool\nconst initialStateDisplayANTBool = {\n    displayANTBoolVar: false\n}\n\nexport const displayANTBool = (state = initialStateDisplayANTBool, action = {}) => {\n    switch (action.type) {\n        case DISPLAY_ANT_BOOL_FLIP:\n            return Object.assign({}, state, { displayANTBoolVar: action.payload })\n        default:\n            return state;\n    }\n}\n\n//Display Task Info Bool\n\nconst initialStateTaskInfoBool = {\n    displayTaskInfoBoolVar: false\n}\n\nexport const displayTaskInfoBool = (state = initialStateTaskInfoBool, action = {}) => {\n    switch (action.type) {\n        case DISPLAY_TASK_INFO_FLIP:\n            return Object.assign({}, state, { displayTaskInfoBoolVar: action.payload })\n        default:\n            return state;\n    }\n}\n\n//Display Calendar Bool\n\nconst initialStateDisplayCalBool = {\n    displayCalBoolVar: false\n}\n\nexport const displayCalBool = (state = initialStateDisplayCalBool, action = {}) => {\n    switch (action.type) {\n        case DISPLAY_CAL_BOOL_FLIP:\n            return Object.assign({}, state, { displayCalBoolVar: action.payload })\n        default:\n            return state;\n    }\n}\n\n//Display Help Bool\n\nconst initialStateHelpBool = {\n    helpBoolVar: false\n}\n\nexport const helpBool = (state = initialStateHelpBool, action = {}) => {\n    switch (action.type) {\n        case INITIAL_HELP_BOOL:\n            return Object.assign({}, state, {helpBoolVar: action.payload})\n        case HELP_BOOL_FLIP:\n            return Object.assign({}, state, {helpBoolVar: action.payload})\n        default:\n            return state;\n    }\n}\n\n//Set Task Selected\n\nconst initialStateTaskSelected = {\n    taskSelectedVar: -1\n}\n\nexport const setTaskSelected = (state = initialStateTaskSelected, action = {}) => {\n    switch (action.type) {\n        case SET_TASK_SELECTED:\n            return Object.assign({}, state, { taskSelectedVar: action.payload })\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}