{"ast":null,"code":"var _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/UserConsole/UserUpload/Inputs.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addData, setFileUploadStatus, setFileUploadInProgress, setFileSubmitStatus, addActivity } from '../../actions';\nimport { getCurrentDateTime, isValidCode, isValidDate } from '../../globalFunctions';\n\nconst mapStateToProps = state => {\n  return {\n    typeOptions: state.typeOptionsData.typeOptionsVar,\n    marketOptions: state.marketOptionsData.marketOptionsVar,\n    languageOptions: state.languageOptionsData.languageOptionsVar,\n    fileUploadComplete: state.fileUploadCompleteData.fileUploadComplete,\n    info: state.documentRepoInfoData.documentRepoInfoDataVar,\n    accessControlInfo: state.adminAccessControlInfoData.adminAccessControlInfo,\n    name: state.userLogInData.name,\n    dept: state.userLogInData.dept\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addData: data => dispatch(addData(data)),\n    setFileUploadStatus: text => dispatch(setFileUploadStatus(text)),\n    setFileUploadInProgress: bool => dispatch(setFileUploadInProgress(bool)),\n    setFileSubmitStatus: bool => dispatch(setFileSubmitStatus(bool)),\n    addActivity: data => dispatch(addActivity(data))\n  };\n};\n\nclass Inputs extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = () => {\n      if (this.props.fileUploadComplete !== true) {\n        return window.alert('Please upload a file first');\n      }\n\n      if (window.confirm('Do you want to submit this file?')) {\n        this.handleConfirm();\n      }\n    };\n\n    this.handleConfirm = () => {\n      if (this.state.resetCodeBool === true || this.state.resetDateBool === true || this.state.resetLanguageBool === true || this.state.resetMarketBool === true || this.state.resetTypeBool === true || this.state.resetVisibilityBool === true || this.state.resetNameBool === true) {\n        return window.alert('Please fill in all required fields.');\n      }\n\n      if (!isValidCode(this.state.code)) {\n        return window.alert('Please write the code in the correct format');\n      }\n\n      if (!isValidDate(this.state.date)) {\n        return window.alert('Please input the date correctly as mm/dd/YYYY');\n      } else {\n        let newData = {\n          key: this.props.info.length,\n          code: this.state.code,\n          visibility: this.state.visibility,\n          market: this.state.market,\n          type: this.state.type,\n          language: this.state.language,\n          date: this.state.date,\n          status: 'pending',\n          name: this.state.name\n        };\n        this.props.addData(newData);\n        this.props.addActivity({\n          activity: 'Added Document: ' + this.state.code,\n          user: this.props.name,\n          date: getCurrentDateTime(),\n          division: this.props.dept,\n          ip: '111.111.111'\n        });\n        this.setState({\n          resetTypeBool: true,\n          resetVisibilityBool: true,\n          resetMarketBool: true,\n          resetLanguageBool: true,\n          resetCodeBool: true,\n          resetDateBool: true,\n          resetNameBool: true,\n          code: '',\n          visibility: '',\n          market: '',\n          type: '',\n          language: '',\n          date: '',\n          name: ''\n        });\n        this.props.setFileUploadStatus(false);\n        this.props.setFileSubmitStatus(true);\n      }\n    };\n\n    this.resetSelect = bool => {\n      if (bool === true) {\n        return React.createElement(\"option\", {\n          value: \"\",\n          disabled: true,\n          selected: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, '');\n      } else return React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, '');\n    };\n\n    this.resetInput = (bool, string, onClickFunction, name) => {\n      if (bool === true) {\n        return React.createElement(\"input\", {\n          name: name,\n          style: {\n            width: \"100%\",\n            fontSize: '0.8vw'\n          },\n          id: \"txt\",\n          value: string,\n          type: \"text\",\n          onChange: onClickFunction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"input\", {\n          name: name,\n          style: {\n            width: \"100%\",\n            fontSize: '0.8vw'\n          },\n          id: \"txt\",\n          type: \"text\",\n          onChange: onClickFunction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      resetTypeBool: true,\n      resetVisibilityBool: true,\n      resetMarketBool: true,\n      resetLanguageBool: true,\n      resetCodeBool: true,\n      resetDateBool: true,\n      resetNameBool: true,\n      code: '',\n      visibility: '',\n      market: '',\n      type: '',\n      language: '',\n      date: '',\n      name: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    if (name === 'code') {\n      this.setState({\n        resetCodeBool: false\n      });\n    } else if (name === 'visibility') {\n      this.setState({\n        resetVisibilityBool: false\n      });\n    } else if (name === 'market') {\n      this.setState({\n        resetMarketBool: false\n      });\n    } else if (name === 'type') {\n      this.setState({\n        resetTypeBool: false\n      });\n    } else if (name === 'language') {\n      this.setState({\n        resetLanguageBool: false\n      });\n    } else if (name === 'date') {\n      this.setState({\n        resetDateBool: false\n      });\n    } else if (name === 'name') {\n      this.setState({\n        resetNameBool: false\n      });\n    }\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        height: '16vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Code:\", this.resetInput(this.state.resetCodeBool, '', this.handleInputChange, 'code'))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Name:\", this.resetInput(this.state.resetNameBool, '', this.handleInputChange, 'name')))), React.createElement(Row, {\n      style: {\n        height: '18vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Type:\", React.createElement(\"select\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      onChange: this.handleInputChange,\n      name: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, this.resetSelect(this.state.resetTypeBool), this.props.typeOptions.map(typeOption => React.createElement(\"option\", {\n      key: typeOption.value,\n      value: typeOption.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, typeOption.text))))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Visibility:\", React.createElement(\"select\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      onChange: this.handleInputChange,\n      name: \"visibility\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.resetSelect(this.state.resetVisibilityBool), React.createElement(\"option\", {\n      value: \"PUBLIC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"PUBLIC\"), React.createElement(\"option\", {\n      value: \"TENANTID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"TENANTID\")))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Market:\", React.createElement(\"select\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      onChange: this.handleInputChange,\n      name: \"market\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, this.resetSelect(this.state.resetMarketBool), this.props.marketOptions.map(marketOption => React.createElement(\"option\", {\n      key: marketOption.text,\n      value: marketOption.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, marketOption.text)))))), React.createElement(Row, {\n      style: {\n        height: '18vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Date:\", this.resetInput(this.state.resetDateBool, '', this.handleInputChange, 'date'))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Language:\", React.createElement(\"select\", {\n      style: {\n        width: \"100%\",\n        fontSize: '0.8vw'\n      },\n      onChange: this.handleInputChange,\n      name: \"language\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, this.resetSelect(this.state.resetLanguageBool), this.props.languageOptions.map(languageOption => React.createElement(\"option\", {\n      key: languageOption.text,\n      value: languageOption.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, languageOption.text))))), React.createElement(Col, {\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      style: {\n        width: '100%',\n        fontSize: '0.8vw'\n      },\n      onClick: () => {\n        this.handleSubmit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputs);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/UserConsole/UserUpload/Inputs.js"],"names":["React","Component","Col","Row","Button","connect","addData","setFileUploadStatus","setFileUploadInProgress","setFileSubmitStatus","addActivity","getCurrentDateTime","isValidCode","isValidDate","mapStateToProps","state","typeOptions","typeOptionsData","typeOptionsVar","marketOptions","marketOptionsData","marketOptionsVar","languageOptions","languageOptionsData","languageOptionsVar","fileUploadComplete","fileUploadCompleteData","info","documentRepoInfoData","documentRepoInfoDataVar","accessControlInfo","adminAccessControlInfoData","adminAccessControlInfo","name","userLogInData","dept","mapDispatchToProps","dispatch","data","text","bool","Inputs","constructor","handleSubmit","props","window","alert","confirm","handleConfirm","resetCodeBool","resetDateBool","resetLanguageBool","resetMarketBool","resetTypeBool","resetVisibilityBool","resetNameBool","code","date","newData","key","length","visibility","market","type","language","status","activity","user","division","ip","setState","resetSelect","resetInput","string","onClickFunction","width","fontSize","handleInputChange","bind","event","target","value","render","height","map","typeOption","marketOption","languageOption"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport {\n    addData,\n    setFileUploadStatus,\n    setFileUploadInProgress,\n    setFileSubmitStatus,\n    addActivity\n} from '../../actions';\nimport { getCurrentDateTime, isValidCode, isValidDate } from '../../globalFunctions'\n\nconst mapStateToProps = state => {\n    return {\n        typeOptions: state.typeOptionsData.typeOptionsVar,\n        marketOptions: state.marketOptionsData.marketOptionsVar,\n        languageOptions: state.languageOptionsData.languageOptionsVar,\n        fileUploadComplete: state.fileUploadCompleteData.fileUploadComplete,\n        info: state.documentRepoInfoData.documentRepoInfoDataVar,\n        accessControlInfo: state.adminAccessControlInfoData.adminAccessControlInfo,\n        name: state.userLogInData.name,\n        dept: state.userLogInData.dept\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addData: (data) => dispatch(addData(data)),\n        setFileUploadStatus: (text) => dispatch(setFileUploadStatus(text)),\n        setFileUploadInProgress: (bool) => dispatch(setFileUploadInProgress(bool)),\n        setFileSubmitStatus: (bool) => dispatch(setFileSubmitStatus(bool)),\n        addActivity: (data) => dispatch(addActivity(data))\n    }\n}\n\nclass Inputs extends Component {\n    constructor() {\n        super()\n        this.state = {\n            resetTypeBool: true,\n            resetVisibilityBool: true,\n            resetMarketBool: true,\n            resetLanguageBool: true,\n            resetCodeBool: true,\n            resetDateBool: true,\n            resetNameBool: true,\n            code: '',\n            visibility: '',\n            market: '',\n            type: '',\n            language: '',\n            date: '',\n            name: ''\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        if (name === 'code') {\n            this.setState({ resetCodeBool: false })\n        }\n        else if (name === 'visibility') {\n            this.setState({ resetVisibilityBool: false })\n        }\n        else if (name === 'market') {\n            this.setState({ resetMarketBool: false })\n        }\n        else if (name === 'type') {\n            this.setState({ resetTypeBool: false })\n        }\n        else if (name === 'language') {\n            this.setState({ resetLanguageBool: false })\n        }\n        else if (name === 'date') {\n            this.setState({ resetDateBool: false })\n        }\n        else if (name === 'name') {\n            this.setState({ resetNameBool: false })\n        }\n\n        this.setState({\n            [name]: value\n        });\n\n    }\n\n    handleSubmit = () => {\n        if (this.props.fileUploadComplete !== true) {\n            return window.alert('Please upload a file first')\n        }\n\n        if (window.confirm('Do you want to submit this file?')) {\n            this.handleConfirm()\n        }\n    }\n\n    handleConfirm = () => {\n\n        if (this.state.resetCodeBool === true || this.state.resetDateBool === true || this.state.resetLanguageBool === true || this.state.resetMarketBool === true || this.state.resetTypeBool === true || this.state.resetVisibilityBool === true || this.state.resetNameBool === true) {\n            return window.alert('Please fill in all required fields.')\n        }\n        if (!isValidCode(this.state.code)) {\n            return window.alert('Please write the code in the correct format')\n        }\n        if (!isValidDate(this.state.date)) {\n            return window.alert('Please input the date correctly as mm/dd/YYYY')\n        }\n        else {\n\n            let newData = {\n                key: this.props.info.length,\n                code: this.state.code,\n                visibility: this.state.visibility,\n                market: this.state.market,\n                type: this.state.type,\n                language: this.state.language,\n                date: this.state.date,\n                status: 'pending',\n                name: this.state.name\n            }\n\n            this.props.addData(newData)\n\n            this.props.addActivity({\n                activity: 'Added Document: ' + this.state.code,\n                user: this.props.name,\n                date: getCurrentDateTime(),\n                division: this.props.dept,\n                ip: '111.111.111'\n            })\n\n            this.setState({\n                resetTypeBool: true,\n                resetVisibilityBool: true,\n                resetMarketBool: true,\n                resetLanguageBool: true,\n                resetCodeBool: true,\n                resetDateBool: true,\n                resetNameBool: true,\n                code: '',\n                visibility: '',\n                market: '',\n                type: '',\n                language: '',\n                date: '',\n                name: ''\n            }\n            )\n\n            this.props.setFileUploadStatus(false);\n            this.props.setFileSubmitStatus(true);\n        }\n    }\n\n    resetSelect = (bool) => {\n        if (bool === true) {\n            return <option value=\"\" disabled selected>{''}</option>\n        }\n        else return <option value=\"\" disabled >{''}</option>\n\n    }\n\n    resetInput = (bool, string, onClickFunction, name) => {\n        if (bool === true) {\n            return <input name={name} style={{ width: \"100%\", fontSize: '0.8vw' }} id='txt' value={string} type='text' onChange={onClickFunction}></input>\n        }\n        else {\n            return <input name={name} style={{ width: \"100%\", fontSize: '0.8vw' }} id='txt' type='text' onChange={onClickFunction}></input>\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <Row style={{ height: '16vh' }}>\n                        <Col md={8}>\n                            <label style={{ width: \"100%\", fontSize: '0.8vw' }}>\n                                Code:\n                                {this.resetInput(this.state.resetCodeBool, '', this.handleInputChange, 'code')}\n                            </label>\n                        </Col>\n                        <Col md={4}>\n                            <label style={{ width: \"100%\", fontSize: '0.8vw' }}>\n                                Name:\n                                {this.resetInput(this.state.resetNameBool, '', this.handleInputChange, 'name')}\n                            </label>\n                        </Col>\n                    </Row>\n                    <Row style={{ height: '18vh' }}>\n                        <Col md={4}>\n                            <label style={{ width: \"100%\", fontSize: '0.8vw' }}>\n                                Type:\n                                <select style={{ width: \"100%\", fontSize: '0.8vw' }} onChange={this.handleInputChange} name='type'>\n                                    {this.resetSelect(this.state.resetTypeBool)}\n                                    {this.props.typeOptions.map(typeOption => (\n                                        <option key={typeOption.value} value={typeOption.text}>\n                                            {typeOption.text}\n                                        </option>\n                                    ))}\n                                </select>\n                            </label>\n                        </Col>\n                        <Col md={4}>\n                            <label style={{ width: \"100%\", fontSize: '0.8vw' }}>\n                                Visibility:\n                                <select style={{ width: \"100%\", fontSize: '0.8vw' }} onChange={this.handleInputChange} name='visibility'>\n                                    {this.resetSelect(this.state.resetVisibilityBool)}\n                                    <option value=\"PUBLIC\">PUBLIC</option>\n                                    <option value=\"TENANTID\">TENANTID</option>\n                                </select>\n                            </label>\n                        </Col>\n                        <Col md={4}>\n                            <label style={{ width: \"100%\", fontSize: '0.8vw' }}>\n                                Market:\n                                <select style={{ width: \"100%\", fontSize: '0.8vw' }} onChange={this.handleInputChange} name='market'>\n                                    {this.resetSelect(this.state.resetMarketBool)}\n                                    {this.props.marketOptions.map(marketOption => (\n                                        <option key={marketOption.text} value={marketOption.value}>\n                                            {marketOption.text}\n                                        </option>\n                                    ))}\n                                </select>\n                            </label>\n                        </Col>\n                    </Row>\n                    <Row style={{ height: '18vh' }}>\n                        <Col md={4}>\n                            <label style={{ width: \"100%\", fontSize: '0.8vw' }}>\n                                Date:\n                                {this.resetInput(this.state.resetDateBool, '', this.handleInputChange, 'date')}\n                            </label>\n                        </Col>\n                        <Col md={4}>\n                            <label style={{ width: \"100%\", fontSize: '0.8vw' }}>\n                                Language:\n                                <select style={{ width: \"100%\", fontSize: '0.8vw' }} onChange={this.handleInputChange} name='language'>\n                                    {this.resetSelect(this.state.resetLanguageBool)}\n                                    {this.props.languageOptions.map(languageOption => (\n                                        <option key={languageOption.text} value={languageOption.value}>\n                                            {languageOption.text}\n                                        </option>\n                                    ))}\n                                </select>\n                            </label>\n                        </Col>\n                        <Col md={4}>\n                            <Button size='small' variant=\"outlined\" style={{ width: '100%', fontSize: '0.8vw' }} onClick={() => { this.handleSubmit() }}>\n                                Submit\n                        </Button>\n                        </Col>\n                    </Row>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputs)"]},"metadata":{},"sourceType":"module"}