{"ast":null,"code":"import _defineProperty from \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/AddTask/AddTask.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { addNewTask, displayANTBoolFlip } from '../actions';\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addNewTask: form => dispatch(addNewTask(form)),\n    displayANTBoolFlip: bool => dispatch(displayANTBoolFlip(bool))\n  };\n};\n\nfunction isValidDate(dateString) {\n  var regEx = /^\\d{4}-\\d{2}-\\d{2}$/;\n  if (!dateString.match(regEx)) return false; // Invalid format\n\n  var d = new Date(dateString);\n  var dNum = d.getTime();\n  if (!dNum && dNum !== 0) return false; // NaN value, Invalid date\n\n  return d.toISOString().slice(0, 10) === dateString;\n}\n\nclass AddTask extends Component {\n  constructor() {\n    super();\n\n    this.changeHandler = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        formControls: _objectSpread({}, this.state.formControls, {\n          [name]: _objectSpread({}, this.state.formControls[name], {\n            value\n          })\n        })\n      });\n    };\n\n    this.handleSubtaskChange = (i, event) => {\n      const newSubtasks = this.state.subtasks.slice();\n      newSubtasks[i] = event.target.value;\n      this.setState({\n        subtasks: newSubtasks\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (this.state.formControls.difficulty.value == 'intro' || this.state.formControls.difficulty.value == '') {\n        window.alert('Please select difficulty');\n      }\n\n      if (!isValidDate(this.state.formControls.date.value)) {\n        window.alert('Please input a valid date');\n      } else {\n        this.setState({\n          formControls: {\n            name: {\n              value: ''\n            },\n            date: {\n              value: ''\n            },\n            difficulty: {\n              value: ''\n            }\n          },\n          numberSubtasks: 0\n        });\n        this.props.addNewTask({\n          name: this.state.formControls.name.value,\n          date: this.state.formControls.date.value,\n          difficulty: this.state.formControls.difficulty.value,\n          subtasks: this.state.subtasks\n        });\n        this.props.displayANTBoolFlip(false);\n      }\n    };\n\n    this.state = {\n      numberSubtasks: 0,\n      subtasks: new Array(this.numberSubtasks),\n      formControls: {\n        name: {\n          value: ''\n        },\n        date: {\n          value: ''\n        },\n        difficulty: {\n          value: ''\n        }\n      }\n    };\n  }\n\n  render() {\n    const subTaskInputs = [];\n\n    for (let i = 0; i < this.state.numberSubtasks; i++) {\n      subTaskInputs.push(React.createElement(\"input\", {\n        type: \"text\",\n        className: \"addInputSubtask\",\n        onChange: event => this.handleSubtaskChange(i, event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"taskFormInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"addTaskInputNameLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Task Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      className: \"addTaskInputName\",\n      value: this.state.formControls.name.value,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"taskFormInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"addTaskInputDateLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Due Date\"), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      className: \"addTaskInputDate\",\n      value: this.state.formControls.date.value,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"taskFormInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"addTaskInputDifficultyLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Difficulty\"), React.createElement(\"select\", {\n      name: \"difficulty\",\n      value: this.state.formControls.difficulty.value,\n      className: \"addTaskInputDifficulty\",\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Select Difficulty:\"), React.createElement(\"option\", {\n      value: \"Easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Easy\"), React.createElement(\"option\", {\n      value: \"Medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      value: \"Difficult\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Difficult\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, subTaskInputs), React.createElement(Button, {\n      size: \"small\",\n      onClick: () => {\n        this.setState({\n          numberSubtasks: this.state.numberSubtasks + 1\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Add SubTask\"), React.createElement(Button, {\n      size: \"small\",\n      onClick: () => {\n        this.handleSubmit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/AddTask/AddTask.js"],"names":["React","Component","connect","Button","addNewTask","displayANTBoolFlip","mapStateToProps","state","mapDispatchToProps","dispatch","form","bool","isValidDate","dateString","regEx","match","d","Date","dNum","getTime","toISOString","slice","AddTask","constructor","changeHandler","event","name","target","value","setState","formControls","handleSubtaskChange","i","newSubtasks","subtasks","handleSubmit","difficulty","window","alert","date","numberSubtasks","props","Array","render","subTaskInputs","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport {\n    addNewTask,\n    displayANTBoolFlip\n} from '../actions'\n\n\nconst mapStateToProps = state => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addNewTask: (form) => dispatch(addNewTask(form)),\n        displayANTBoolFlip: (bool) => dispatch(displayANTBoolFlip(bool))\n    }\n}\n\nfunction isValidDate(dateString) {\n    var regEx = /^\\d{4}-\\d{2}-\\d{2}$/;\n    if(!dateString.match(regEx)) return false;  // Invalid format\n    var d = new Date(dateString);\n    var dNum = d.getTime();\n    if(!dNum && dNum !== 0) return false; // NaN value, Invalid date\n    return d.toISOString().slice(0,10) === dateString;\n  }\n\nclass AddTask extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\n            numberSubtasks: 0,\n\n            subtasks: new Array(this.numberSubtasks),\n\n            formControls: {\n                name: {\n                    value: ''\n                },\n                date: {\n                    value: ''\n                },\n                difficulty: {\n                    value: ''\n                }\n            }\n        }\n\n    }\n\n    changeHandler = event => {\n\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState({\n            formControls: {\n                ...this.state.formControls,\n                [name]: {\n                    ...this.state.formControls[name],\n                    value\n                }\n            }\n        });\n\n    }\n\n    handleSubtaskChange = (i, event) => {\n\n        const newSubtasks = this.state.subtasks.slice()\n        newSubtasks[i] = event.target.value\n        this.setState({ subtasks: newSubtasks })\n    }\n\n    handleSubmit = () => {\n\n        if (this.state.formControls.difficulty.value == 'intro' || this.state.formControls.difficulty.value == '') {\n            window.alert('Please select difficulty')\n        }\n\n        if (!(isValidDate(this.state.formControls.date.value))){\n            window.alert('Please input a valid date')\n        }\n\n        else {\n            this.setState({\n                formControls: {\n                    name: {\n                        value: ''\n                    },\n                    date: {\n                        value: ''\n                    },\n                    difficulty: {\n                        value: ''\n                    }\n                },\n                numberSubtasks: 0\n            })\n\n            this.props.addNewTask({\n                name: this.state.formControls.name.value,\n                date: this.state.formControls.date.value,\n                difficulty: this.state.formControls.difficulty.value,\n                subtasks: this.state.subtasks\n            })\n\n            this.props.displayANTBoolFlip(false)\n\n        }\n    }\n\n\n\n    render() {\n        const subTaskInputs = [];\n\n        for (let i = 0; i < this.state.numberSubtasks; i++) {\n            subTaskInputs.push(<input type=\"text\"\n                className='addInputSubtask'\n                onChange={(event) => this.handleSubtaskChange(i, event)}\n            />)\n        }\n\n        return (\n            <form>\n                <div className='taskFormInput'>\n                    <label className='addTaskInputNameLabel'>Task Name</label>\n                    <input type=\"text\"\n                        name=\"name\"\n                        className='addTaskInputName'\n                        value={this.state.formControls.name.value}\n                        onChange={this.changeHandler}\n                    />\n                </div>\n\n                <div className='taskFormInput'>\n                    <label className='addTaskInputDateLabel'>Due Date</label>\n                    <input type=\"date\"\n                        name=\"date\"\n                        className='addTaskInputDate'\n                        value={this.state.formControls.date.value}\n                        onChange={this.changeHandler}\n                    />\n                </div>\n\n                <div className='taskFormInput'>\n                    <label className='addTaskInputDifficultyLabel'>Difficulty</label>\n                    <select name=\"difficulty\"\n                        value={this.state.formControls.difficulty.value}\n                        className='addTaskInputDifficulty'\n                        onChange={this.changeHandler}>\n                        <option value='intro'>Select Difficulty:</option>\n                        <option value=\"Easy\">Easy</option>\n                        <option value=\"Medium\">Medium</option>\n                        <option value=\"Difficult\">Difficult</option>\n                    </select>\n                </div>\n\n                <div>\n                    {subTaskInputs}\n                </div>\n\n                <Button size='small' onClick={() => {\n                    this.setState({\n                        numberSubtasks: this.state.numberSubtasks + 1\n                    })\n                }}>\n                    Add SubTask\n                </Button>\n\n                <Button size='small' onClick={() => { this.handleSubmit() }}>\n                    Submit\n                </Button>\n\n            </form>\n        );\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask)"]},"metadata":{},"sourceType":"module"}