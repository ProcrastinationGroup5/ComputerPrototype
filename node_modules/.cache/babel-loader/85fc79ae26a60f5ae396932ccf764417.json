{"ast":null,"code":"import _defineProperty from \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CHANGE_SEARCH_FIELD, CHANGE_SORT_VALUE, CHANGE_STATUS_VALUE, ADD_DATA, CHANGE_DEPT_FILTER, SET_ROW_SELECTED, SET_ROW_NOT_SELECTED, RESET_ROW_SELECTED, REMOVE_TYPE_SELECT, REMOVE_LANGUAGE_SELECT, REMOVE_MARKET_SELECT, ADD_LANGUAGE_SELECT, ADD_TYPE_SELECT, ADD_MARKET_SELECT, EDIT_LANGUAGE_SELECT, EDIT_MARKET_SELECT, EDIT_TYPE_SELECT, FILE_UPLOAD_COMPLETE, FILE_UPLOAD_IN_PROGRESS, FILE_SUBMIT_COMPLETE, CHANGE_USER_EDIT_DOC_REPO_STATUS, CHANGE_ADMIN_EDIT_DOC_REPO_STATUS, CHANGE_SELECTED_ROW_USER_DOC_REPO, CHANGE_SELECTED_ROW_ADMIN_DOC_REPO, EDIT_DATA, CHANGE_ADMIN_EDIT_DATA_FIELD_SELECTED, CHANGE_ADMIN_EDIT_DATA_VALUE_SELECTED, CHANGE_USER_EDIT_DATA_FIELD_SELECTED, CHANGE_USER_EDIT_DATA_VALUE_SELECTED, LOG_IN, SET_USER, SET_DEPT, DELETE_DATA, ADD_ACTIVITY } from './constants';\nimport { documentRepoInfo } from './Data/documentRepoInfo';\nimport { auditLogInfo } from './Data/auditLogInfo';\nimport { accessControlInfo } from './Data/accessControlInfo';\nimport { typeOptions, marketOptions, languageOptions } from './Data/selectOptions'; //Inputs Data Reducers\n//State of Options for Type Field\n\nconst initialStateTypeOptionsData = {\n  typeOptionsVar: typeOptions\n};\nexport const typeOptionsData = (state = initialStateTypeOptionsData, action = {}) => {\n  switch (action.type) {\n    case REMOVE_TYPE_SELECT:\n      return Object.assign({}, state, {\n        typeOptionsVar: [...state.typeOptionsVar.filter(function (selectedType) {\n          return selectedType.key !== action.payload;\n        })]\n      });\n\n    case ADD_TYPE_SELECT:\n      return Object.assign({}, state, {\n        typeOptionsVar: [...state.typeOptionsVar, action.payload]\n      });\n\n    case EDIT_TYPE_SELECT:\n      return Object.assign({}, state, {\n        typeOptionsVar: [...state.typeOptionsVar.map(option => {\n          if (option.key !== action.payload.key) {\n            return option;\n          }\n\n          return _objectSpread({}, option, {}, action.payload);\n        })]\n      });\n\n    default:\n      return state;\n  }\n}; //State of Options for Market Field\n\nconst initialStateMarketOptionsData = {\n  marketOptionsVar: marketOptions\n};\nexport const marketOptionsData = (state = initialStateMarketOptionsData, action = {}) => {\n  switch (action.type) {\n    case REMOVE_MARKET_SELECT:\n      return Object.assign({}, state, {\n        marketOptionsVar: [...state.marketOptionsVar.filter(function (selectedMarket) {\n          return selectedMarket.key !== action.payload;\n        })]\n      });\n\n    case ADD_MARKET_SELECT:\n      return Object.assign({}, state, {\n        marketOptionsVar: [...state.marketOptionsVar, action.payload]\n      });\n\n    case EDIT_MARKET_SELECT:\n      return Object.assign({}, state, {\n        marketOptionsVar: [...state.marketOptionsVar.map(option => {\n          if (option.key !== action.payload.key) {\n            return option;\n          }\n\n          return _objectSpread({}, option, {}, action.payload);\n        })]\n      });\n\n    default:\n      return state;\n  }\n}; //State of Options for Language Field\n\nconst initialStateLanguageOptionsData = {\n  languageOptionsVar: languageOptions\n};\nexport const languageOptionsData = (state = initialStateLanguageOptionsData, action = {}) => {\n  switch (action.type) {\n    case REMOVE_LANGUAGE_SELECT:\n      return Object.assign({}, state, {\n        languageOptionsVar: [...state.languageOptionsVar.filter(function (selectedLanguage) {\n          return selectedLanguage.key !== action.payload;\n        })]\n      });\n\n    case ADD_LANGUAGE_SELECT:\n      return Object.assign({}, state, {\n        languageOptionsVar: [...state.languageOptionsVar, action.payload]\n      });\n\n    case EDIT_LANGUAGE_SELECT:\n      return Object.assign({}, state, {\n        languageOptionsVar: [...state.languageOptionsVar.map(option => {\n          if (option.key !== action.payload.key) {\n            return option;\n          }\n\n          return _objectSpread({}, option, {}, action.payload);\n        })]\n      });\n\n    default:\n      return state;\n  }\n}; //Admin Access Control Reducers\n//State of Admin Access Control Data\n\nconst initialStateAdminAccessControlInfoData = {\n  adminAccessControlInfo: accessControlInfo\n};\nexport const adminAccessControlInfoData = (state = initialStateAdminAccessControlInfoData, action = {}) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}; //State of Filter of Admin Access Control Table\n\nconst initialStateAdminAccessControlDeptFilterData = {\n  adminAccessControlDeptFilter: 'none'\n};\nexport const adminAccessControlDeptFilterData = (state = initialStateAdminAccessControlDeptFilterData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_DEPT_FILTER:\n      return Object.assign({}, state, {\n        adminAccessControlDeptFilter: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Selected Rows in Admin Access Control Table\n\nconst initialStateAdminAccessControlSelectedRowsData = {\n  adminAccessControlSelectedRows: []\n};\nexport const adminAccessControlSelectedRowsData = (state = initialStateAdminAccessControlSelectedRowsData, action = {}) => {\n  switch (action.type) {\n    case SET_ROW_SELECTED:\n      return Object.assign({}, state, {\n        adminAccessControlSelectedRows: [...state.adminAccessControlSelectedRows.filter(function (selectedRow) {\n          return selectedRow !== action.payload;\n        })]\n      });\n\n    case SET_ROW_NOT_SELECTED:\n      return Object.assign({}, state, {\n        adminAccessControlSelectedRows: [...state.adminAccessControlSelectedRows, action.payload]\n      });\n\n    case RESET_ROW_SELECTED:\n      return Object.assign({}, state, {\n        adminAccessControlSelectedRows: []\n      });\n\n    default:\n      return state;\n  }\n}; //Document Repo/Admin Upload/User Upload Reducers\n//State of Document Repository Data\n\nconst initialStateDocumentRepoInfoData = {\n  documentRepoInfoDataVar: documentRepoInfo\n};\nexport const documentRepoInfoData = (state = initialStateDocumentRepoInfoData, action = {}) => {\n  switch (action.type) {\n    case ADD_DATA:\n      return Object.assign({}, state, {\n        documentRepoInfoDataVar: [...state.documentRepoInfoDataVar, action.payload]\n      });\n\n    case EDIT_DATA:\n      return Object.assign({}, state, {\n        documentRepoInfoDataVar: [...state.documentRepoInfoDataVar.map(data => {\n          if (data.key !== action.payload.key) {\n            return data;\n          }\n\n          return _objectSpread({}, data, {}, action.payload);\n        })]\n      });\n\n    case DELETE_DATA:\n      return Object.assign({}, state, {\n        documentRepoInfoDataVar: [...state.documentRepoInfoDataVar.filter(function (info) {\n          return info.key !== action.payload;\n        })]\n      });\n\n    default:\n      return state;\n  }\n}; //State of Whether Initial Upload of File is Complete\n\nconst initialStateFileUploadComplete = {\n  fileUploadComplete: false\n};\nexport const fileUploadCompleteData = (state = initialStateFileUploadComplete, action = {}) => {\n  switch (action.type) {\n    case FILE_UPLOAD_COMPLETE:\n      return Object.assign({}, state, {\n        fileUploadComplete: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Whether File is in the Process of Uploading\n\nconst initialStateFileUploadInProgress = {\n  inProgress: 'pending'\n};\nexport const fileUploadInProgress = (state = initialStateFileUploadInProgress, action = {}) => {\n  switch (action.type) {\n    case FILE_UPLOAD_IN_PROGRESS:\n      return Object.assign({}, state, {\n        inProgress: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Whether File has been Submitted\n\nconst initialStateFileSubmitComplete = {\n  fileSubmitComplete: false\n};\nexport const fileSubmitCompleteData = (state = initialStateFileSubmitComplete, action = {}) => {\n  switch (action.type) {\n    case FILE_SUBMIT_COMPLETE:\n      return Object.assign({}, state, {\n        fileSubmitComplete: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //Admin Document Repo Reducers\n//State of SearchBox for Admin Doc Repo\n\nconst initialStateAdminDocumentRepoSearchData = {\n  adminDocumentRepoSearchField: ''\n};\nexport const adminDocumentRepoSearchData = (state = initialStateAdminDocumentRepoSearchData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        adminDocumentRepoSearchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Sort for Admin Doc Repo\n\nconst initialStateAdminDocumentRepoSortData = {\n  adminDocumentRepoSort: 'none'\n};\nexport const adminDocumentRepoSortData = (state = initialStateAdminDocumentRepoSortData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SORT_VALUE:\n      return Object.assign({}, state, {\n        adminDocumentRepoSort: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Status for Admin Doc Repo\n\nconst initialStateAdminDocumentRepoStatusData = {\n  adminDocumentRepoStatus: 'all'\n};\nexport const adminDocumentRepoStatusData = (state = initialStateAdminDocumentRepoStatusData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_STATUS_VALUE:\n      return Object.assign({}, state, {\n        adminDocumentRepoStatus: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Whether Admin Doc Repo is Being Edited (BOOL)\n\nconst initialStateAdminEditDocumentRepoStatusData = {\n  adminEditDocumentRepoStatus: false\n};\nexport const adminEditDocumentRepoStatusData = (state = initialStateAdminEditDocumentRepoStatusData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_ADMIN_EDIT_DOC_REPO_STATUS:\n      return Object.assign({}, state, {\n        adminEditDocumentRepoStatus: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Selected Row for Admin Doc Repo\n\nconst initialStateSelectedRowAdminDocRepo = {\n  selectedRowAdminDocRepo: ''\n};\nexport const selectedRowAdminDocRepoData = (state = initialStateSelectedRowAdminDocRepo, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SELECTED_ROW_ADMIN_DOC_REPO:\n      return Object.assign({}, state, {\n        selectedRowAdminDocRepo: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Admin Edit Data Selects\n\nconst initialStateAdminEditField = {\n  adminEditField: ''\n};\nexport const adminEditFieldData = (state = initialStateAdminEditField, action = {}) => {\n  switch (action.type) {\n    case CHANGE_ADMIN_EDIT_DATA_FIELD_SELECTED:\n      return Object.assign({}, state, {\n        adminEditField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst initialStateAdminEditValue = {\n  adminEditValue: ''\n};\nexport const adminEditValueData = (state = initialStateAdminEditValue, action = {}) => {\n  switch (action.type) {\n    case CHANGE_ADMIN_EDIT_DATA_VALUE_SELECTED:\n      return Object.assign({}, state, {\n        adminEditValue: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //Admin Audit Log Reducers\n//State of Admin Audit Log Data\n\nconst initialStateAdminAuditLogInfoData = {\n  adminAuditLogInfo: auditLogInfo\n};\nexport const adminAuditLogInfoData = (state = initialStateAdminAuditLogInfoData, action = {}) => {\n  switch (action.type) {\n    case ADD_ACTIVITY:\n      return Object.assign({}, state, {\n        adminAuditLogInfo: [...state.adminAuditLogInfo, action.payload]\n      });\n\n    default:\n      return state;\n  }\n}; //State of SearchBox for Admin Audit Log\n\nconst initialStateAdminAuditLogSearchData = {\n  adminAuditLogSearchField: ''\n};\nexport const adminAuditLogSearchData = (state = initialStateAdminAuditLogSearchData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        adminAuditLogSearchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Sort for Admin Audit Log\n\nconst initialStateAdminAuditLogSortData = {\n  adminAuditLogSort: 'none'\n};\nexport const adminAuditLogSortData = (state = initialStateAdminAuditLogSortData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SORT_VALUE:\n      return Object.assign({}, state, {\n        adminAuditLogSort: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //User Activity Log Reducers\n\nconst initialStateUserActivityLogSearchData = {\n  userActivityLogSearchField: ''\n}; //State of SearchBox for User Activity Log\n\nexport const userActivityLogSearchData = (state = initialStateUserActivityLogSearchData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        userActivityLogSearchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Sort for User Activity Log\n\nconst initialStateUserActivityLogSortData = {\n  userActivityLogSort: 'none'\n};\nexport const userActivityLogSortData = (state = initialStateUserActivityLogSortData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SORT_VALUE:\n      return Object.assign({}, state, {\n        userActivityLogSort: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //User Document Repo Reducers\n//State of SearchBox for User Doc Repo\n\nconst initialStateUserDocumentRepoSearchData = {\n  userDocumentRepoSearchField: ''\n};\nexport const userDocumentRepoSearchData = (state = initialStateUserDocumentRepoSearchData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        userDocumentRepoSearchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Sort for User Doc Repo\n\nconst initialStateUserDocumentRepoSortData = {\n  userDocumentRepoSort: 'none'\n};\nexport const userDocumentRepoSortData = (state = initialStateUserDocumentRepoSortData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SORT_VALUE:\n      return Object.assign({}, state, {\n        userDocumentRepoSort: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Status for User Doc Repo\n\nconst initialStateUserDocumentRepoStatusData = {\n  userDocumentRepoStatus: 'all'\n};\nexport const userDocumentRepoStatusData = (state = initialStateUserDocumentRepoStatusData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_STATUS_VALUE:\n      return Object.assign({}, state, {\n        userDocumentRepoStatus: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Whether User Doc Repo is Being Edited (BOOL)\n\nconst initialStateUserEditDocumentRepoStatusData = {\n  userEditDocumentRepoStatus: false\n};\nexport const userEditDocumentRepoStatusData = (state = initialStateUserEditDocumentRepoStatusData, action = {}) => {\n  switch (action.type) {\n    case CHANGE_USER_EDIT_DOC_REPO_STATUS:\n      return Object.assign({}, state, {\n        userEditDocumentRepoStatus: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of Selected Row for User Doc Repo\n\nconst initialStateSelectedRowUserDocRepo = {\n  selectedRowUserDocRepo: ''\n};\nexport const selectedRowUserDocRepoData = (state = initialStateSelectedRowUserDocRepo, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SELECTED_ROW_USER_DOC_REPO:\n      return Object.assign({}, state, {\n        selectedRowUserDocRepo: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //State of User Edit Data Selects\n\nconst initialStateUserEditField = {\n  userEditField: ''\n};\nexport const userEditFieldData = (state = initialStateUserEditField, action = {}) => {\n  switch (action.type) {\n    case CHANGE_USER_EDIT_DATA_FIELD_SELECTED:\n      return Object.assign({}, state, {\n        userEditField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nconst initialStateUserEditValue = {\n  userEditValue: ''\n};\nexport const userEditValueData = (state = initialStateUserEditValue, action = {}) => {\n  switch (action.type) {\n    case CHANGE_USER_EDIT_DATA_VALUE_SELECTED:\n      return Object.assign({}, state, {\n        userEditValue: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; // State of User Log In\n\nconst initialStateLogIn = {\n  logIn: false,\n  name: '',\n  dept: ''\n};\nexport const userLogInData = (state = initialStateLogIn, action = {}) => {\n  switch (action.type) {\n    case LOG_IN:\n      return Object.assign({}, state, {\n        logIn: action.payload\n      });\n\n    case SET_USER:\n      return Object.assign({}, state, {\n        name: action.payload\n      });\n\n    case SET_DEPT:\n      return Object.assign({}, state, {\n        dept: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/reducers.js"],"names":["CHANGE_SEARCH_FIELD","CHANGE_SORT_VALUE","CHANGE_STATUS_VALUE","ADD_DATA","CHANGE_DEPT_FILTER","SET_ROW_SELECTED","SET_ROW_NOT_SELECTED","RESET_ROW_SELECTED","REMOVE_TYPE_SELECT","REMOVE_LANGUAGE_SELECT","REMOVE_MARKET_SELECT","ADD_LANGUAGE_SELECT","ADD_TYPE_SELECT","ADD_MARKET_SELECT","EDIT_LANGUAGE_SELECT","EDIT_MARKET_SELECT","EDIT_TYPE_SELECT","FILE_UPLOAD_COMPLETE","FILE_UPLOAD_IN_PROGRESS","FILE_SUBMIT_COMPLETE","CHANGE_USER_EDIT_DOC_REPO_STATUS","CHANGE_ADMIN_EDIT_DOC_REPO_STATUS","CHANGE_SELECTED_ROW_USER_DOC_REPO","CHANGE_SELECTED_ROW_ADMIN_DOC_REPO","EDIT_DATA","CHANGE_ADMIN_EDIT_DATA_FIELD_SELECTED","CHANGE_ADMIN_EDIT_DATA_VALUE_SELECTED","CHANGE_USER_EDIT_DATA_FIELD_SELECTED","CHANGE_USER_EDIT_DATA_VALUE_SELECTED","LOG_IN","SET_USER","SET_DEPT","DELETE_DATA","ADD_ACTIVITY","documentRepoInfo","auditLogInfo","accessControlInfo","typeOptions","marketOptions","languageOptions","initialStateTypeOptionsData","typeOptionsVar","typeOptionsData","state","action","type","Object","assign","filter","selectedType","key","payload","map","option","initialStateMarketOptionsData","marketOptionsVar","marketOptionsData","selectedMarket","initialStateLanguageOptionsData","languageOptionsVar","languageOptionsData","selectedLanguage","initialStateAdminAccessControlInfoData","adminAccessControlInfo","adminAccessControlInfoData","initialStateAdminAccessControlDeptFilterData","adminAccessControlDeptFilter","adminAccessControlDeptFilterData","initialStateAdminAccessControlSelectedRowsData","adminAccessControlSelectedRows","adminAccessControlSelectedRowsData","selectedRow","initialStateDocumentRepoInfoData","documentRepoInfoDataVar","documentRepoInfoData","data","info","initialStateFileUploadComplete","fileUploadComplete","fileUploadCompleteData","initialStateFileUploadInProgress","inProgress","fileUploadInProgress","initialStateFileSubmitComplete","fileSubmitComplete","fileSubmitCompleteData","initialStateAdminDocumentRepoSearchData","adminDocumentRepoSearchField","adminDocumentRepoSearchData","initialStateAdminDocumentRepoSortData","adminDocumentRepoSort","adminDocumentRepoSortData","initialStateAdminDocumentRepoStatusData","adminDocumentRepoStatus","adminDocumentRepoStatusData","initialStateAdminEditDocumentRepoStatusData","adminEditDocumentRepoStatus","adminEditDocumentRepoStatusData","initialStateSelectedRowAdminDocRepo","selectedRowAdminDocRepo","selectedRowAdminDocRepoData","initialStateAdminEditField","adminEditField","adminEditFieldData","initialStateAdminEditValue","adminEditValue","adminEditValueData","initialStateAdminAuditLogInfoData","adminAuditLogInfo","adminAuditLogInfoData","initialStateAdminAuditLogSearchData","adminAuditLogSearchField","adminAuditLogSearchData","initialStateAdminAuditLogSortData","adminAuditLogSort","adminAuditLogSortData","initialStateUserActivityLogSearchData","userActivityLogSearchField","userActivityLogSearchData","initialStateUserActivityLogSortData","userActivityLogSort","userActivityLogSortData","initialStateUserDocumentRepoSearchData","userDocumentRepoSearchField","userDocumentRepoSearchData","initialStateUserDocumentRepoSortData","userDocumentRepoSort","userDocumentRepoSortData","initialStateUserDocumentRepoStatusData","userDocumentRepoStatus","userDocumentRepoStatusData","initialStateUserEditDocumentRepoStatusData","userEditDocumentRepoStatus","userEditDocumentRepoStatusData","initialStateSelectedRowUserDocRepo","selectedRowUserDocRepo","selectedRowUserDocRepoData","initialStateUserEditField","userEditField","userEditFieldData","initialStateUserEditValue","userEditValue","userEditValueData","initialStateLogIn","logIn","name","dept","userLogInData"],"mappings":"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","sourcesContent":[" import {\n    CHANGE_SEARCH_FIELD,\n    CHANGE_SORT_VALUE,\n    CHANGE_STATUS_VALUE,\n    ADD_DATA,\n    CHANGE_DEPT_FILTER,\n    SET_ROW_SELECTED,\n    SET_ROW_NOT_SELECTED,\n    RESET_ROW_SELECTED,\n    REMOVE_TYPE_SELECT,\n    REMOVE_LANGUAGE_SELECT,\n    REMOVE_MARKET_SELECT,\n    ADD_LANGUAGE_SELECT,\n    ADD_TYPE_SELECT,\n    ADD_MARKET_SELECT,\n    EDIT_LANGUAGE_SELECT,\n    EDIT_MARKET_SELECT,\n    EDIT_TYPE_SELECT,\n    FILE_UPLOAD_COMPLETE,\n    FILE_UPLOAD_IN_PROGRESS,\n    FILE_SUBMIT_COMPLETE,\n    CHANGE_USER_EDIT_DOC_REPO_STATUS,\n    CHANGE_ADMIN_EDIT_DOC_REPO_STATUS,\n    CHANGE_SELECTED_ROW_USER_DOC_REPO,\n    CHANGE_SELECTED_ROW_ADMIN_DOC_REPO,\n    EDIT_DATA,\n    CHANGE_ADMIN_EDIT_DATA_FIELD_SELECTED,\n    CHANGE_ADMIN_EDIT_DATA_VALUE_SELECTED,\n    CHANGE_USER_EDIT_DATA_FIELD_SELECTED,\n    CHANGE_USER_EDIT_DATA_VALUE_SELECTED,\n    LOG_IN,\n    SET_USER,\n    SET_DEPT,\n    DELETE_DATA,\n    ADD_ACTIVITY\n} from './constants'\n\nimport { documentRepoInfo } from './Data/documentRepoInfo'\nimport { auditLogInfo } from './Data/auditLogInfo'\nimport { accessControlInfo } from './Data/accessControlInfo'\nimport { typeOptions, marketOptions, languageOptions } from './Data/selectOptions'\n\n//Inputs Data Reducers\n\n//State of Options for Type Field\nconst initialStateTypeOptionsData = {\n    typeOptionsVar: typeOptions\n}\n\nexport const typeOptionsData = (state = initialStateTypeOptionsData, action = {}) => {\n    switch (action.type) {\n        case REMOVE_TYPE_SELECT:\n            return Object.assign({},\n                state,\n                {\n                    typeOptionsVar:\n                        [...state.typeOptionsVar.filter(function (selectedType) {\n                            return selectedType.key !== action.payload\n                        })]\n                })\n        case ADD_TYPE_SELECT:\n            return Object.assign({},\n                state,\n                { typeOptionsVar: [...state.typeOptionsVar, action.payload] });\n        case EDIT_TYPE_SELECT:\n            return Object.assign({},\n                state,\n                {\n                    typeOptionsVar:\n                        [...state.typeOptionsVar.map((option) => {\n                            if (option.key !== action.payload.key) {\n                                return option;\n                            }\n                            return {\n                                ...option,\n                                ...action.payload\n                            };\n                        })]\n                })\n        default:\n            return state;\n    }\n}\n\n//State of Options for Market Field\nconst initialStateMarketOptionsData = {\n    marketOptionsVar: marketOptions\n}\n\nexport const marketOptionsData = (state = initialStateMarketOptionsData, action = {}) => {\n    switch (action.type) {\n        case REMOVE_MARKET_SELECT:\n            return Object.assign({},\n                state,\n                {\n                    marketOptionsVar:\n                        [...state.marketOptionsVar.filter(function (selectedMarket) {\n                            return selectedMarket.key !== action.payload\n                        })]\n                })\n        case ADD_MARKET_SELECT:\n            return Object.assign({},\n                state,\n                { marketOptionsVar: [...state.marketOptionsVar, action.payload] });\n        case EDIT_MARKET_SELECT:\n            return Object.assign({},\n                state,\n                {\n                    marketOptionsVar:\n                        [...state.marketOptionsVar.map((option) => {\n                            if (option.key !== action.payload.key) {\n                                return option;\n                            }\n                            return {\n                                ...option,\n                                ...action.payload\n                            };\n                        })]\n                })\n        default:\n            return state;\n    }\n}\n\n//State of Options for Language Field\nconst initialStateLanguageOptionsData = {\n    languageOptionsVar: languageOptions\n}\n\nexport const languageOptionsData = (state = initialStateLanguageOptionsData, action = {}) => {\n    switch (action.type) {\n        case REMOVE_LANGUAGE_SELECT:\n            return Object.assign({},\n                state,\n                {\n                    languageOptionsVar:\n                        [...state.languageOptionsVar.filter(function (selectedLanguage) {\n                            return selectedLanguage.key !== action.payload\n                        })]\n                })\n        case ADD_LANGUAGE_SELECT:\n            return Object.assign({},\n                state,\n                { languageOptionsVar: [...state.languageOptionsVar, action.payload] });\n        case EDIT_LANGUAGE_SELECT:\n            return Object.assign({},\n                state,\n                {\n                    languageOptionsVar:\n                        [...state.languageOptionsVar.map((option) => {\n                            if (option.key !== action.payload.key) {\n                                return option;\n                            }\n                            return {\n                                ...option,\n                                ...action.payload\n                            };\n                        })]\n                })\n        default:\n            return state;\n    }\n}\n\n//Admin Access Control Reducers\n\n//State of Admin Access Control Data\nconst initialStateAdminAccessControlInfoData = {\n    adminAccessControlInfo: accessControlInfo\n}\n\nexport const adminAccessControlInfoData = (state = initialStateAdminAccessControlInfoData, action = {}) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\n//State of Filter of Admin Access Control Table\nconst initialStateAdminAccessControlDeptFilterData = {\n    adminAccessControlDeptFilter: 'none'\n}\n\nexport const adminAccessControlDeptFilterData = (state = initialStateAdminAccessControlDeptFilterData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_DEPT_FILTER:\n            return Object.assign({}, state, { adminAccessControlDeptFilter: action.payload });\n        default:\n            return state;\n    }\n}\n\n//State of Selected Rows in Admin Access Control Table\nconst initialStateAdminAccessControlSelectedRowsData = {\n    adminAccessControlSelectedRows: []\n}\n\nexport const adminAccessControlSelectedRowsData = (state = initialStateAdminAccessControlSelectedRowsData, action = {}) => {\n    switch (action.type) {\n        case SET_ROW_SELECTED:\n            return Object.assign({},\n                state,\n                {\n                    adminAccessControlSelectedRows:\n                        [...state.adminAccessControlSelectedRows.filter(function (selectedRow) {\n                            return selectedRow !== action.payload\n                        })]\n                })\n        case SET_ROW_NOT_SELECTED:\n            return Object.assign({},\n                state,\n                {\n                    adminAccessControlSelectedRows:\n                        [...state.adminAccessControlSelectedRows, action.payload]\n                })\n        case RESET_ROW_SELECTED:\n            return Object.assign({},\n                state,\n                {\n                    adminAccessControlSelectedRows:\n                        []\n                })\n        default:\n            return state;\n    }\n}\n\n//Document Repo/Admin Upload/User Upload Reducers\n\n//State of Document Repository Data\nconst initialStateDocumentRepoInfoData = {\n    documentRepoInfoDataVar: documentRepoInfo\n}\n\nexport const documentRepoInfoData = (state = initialStateDocumentRepoInfoData, action = {}) => {\n    switch (action.type) {\n        case ADD_DATA:\n            return Object.assign({},\n                state,\n                { documentRepoInfoDataVar: [...state.documentRepoInfoDataVar, action.payload] });\n        case EDIT_DATA:\n            return Object.assign({},\n                state,\n                {\n                    documentRepoInfoDataVar:\n                        [...state.documentRepoInfoDataVar.map((data) => {\n                            if (data.key !== action.payload.key) {\n                                return data;\n                            }\n                            return {\n                                ...data,\n                                ...action.payload\n                            };\n                        })]\n                })\n        case DELETE_DATA:\n            return Object.assign({},\n                state,\n                {\n                    documentRepoInfoDataVar:\n                        [...state.documentRepoInfoDataVar.filter(function (info) {\n                            return info.key !== action.payload\n                        })]\n                })\n        default:\n            return state;\n    }\n}\n\n//State of Whether Initial Upload of File is Complete\nconst initialStateFileUploadComplete = {\n    fileUploadComplete: false\n}\n\nexport const fileUploadCompleteData = (state = initialStateFileUploadComplete, action = {}) => {\n    switch (action.type) {\n        case FILE_UPLOAD_COMPLETE:\n            return Object.assign({}, state, { fileUploadComplete: action.payload });\n        default:\n            return state;\n    }\n}\n\n//State of Whether File is in the Process of Uploading\nconst initialStateFileUploadInProgress = {\n    inProgress: 'pending'\n}\n\nexport const fileUploadInProgress = (state = initialStateFileUploadInProgress, action = {}) => {\n    switch (action.type) {\n        case FILE_UPLOAD_IN_PROGRESS:\n            return Object.assign({}, state, { inProgress: action.payload });\n        default:\n            return state;\n    }\n}\n\n//State of Whether File has been Submitted\nconst initialStateFileSubmitComplete = {\n    fileSubmitComplete: false\n}\n\nexport const fileSubmitCompleteData = (state = initialStateFileSubmitComplete, action = {}) => {\n    switch (action.type) {\n        case FILE_SUBMIT_COMPLETE:\n            return Object.assign({}, state, { fileSubmitComplete: action.payload });\n        default:\n            return state;\n    }\n}\n\n//Admin Document Repo Reducers\n\n//State of SearchBox for Admin Doc Repo\nconst initialStateAdminDocumentRepoSearchData = {\n    adminDocumentRepoSearchField: ''\n}\n\nexport const adminDocumentRepoSearchData = (state = initialStateAdminDocumentRepoSearchData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, { adminDocumentRepoSearchField: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Sort for Admin Doc Repo\nconst initialStateAdminDocumentRepoSortData = {\n    adminDocumentRepoSort: 'none'\n}\n\nexport const adminDocumentRepoSortData = (state = initialStateAdminDocumentRepoSortData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SORT_VALUE:\n            return Object.assign({}, state, { adminDocumentRepoSort: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Status for Admin Doc Repo\nconst initialStateAdminDocumentRepoStatusData = {\n    adminDocumentRepoStatus: 'all'\n}\n\nexport const adminDocumentRepoStatusData = (state = initialStateAdminDocumentRepoStatusData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_STATUS_VALUE:\n            return Object.assign({}, state, { adminDocumentRepoStatus: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Whether Admin Doc Repo is Being Edited (BOOL)\nconst initialStateAdminEditDocumentRepoStatusData = {\n    adminEditDocumentRepoStatus: false\n}\n\nexport const adminEditDocumentRepoStatusData = (state = initialStateAdminEditDocumentRepoStatusData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_ADMIN_EDIT_DOC_REPO_STATUS:\n            return Object.assign({}, state, { adminEditDocumentRepoStatus: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Selected Row for Admin Doc Repo\nconst initialStateSelectedRowAdminDocRepo = {\n    selectedRowAdminDocRepo: ''\n}\n\nexport const selectedRowAdminDocRepoData = (state = initialStateSelectedRowAdminDocRepo, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SELECTED_ROW_ADMIN_DOC_REPO:\n            return Object.assign({}, state, { selectedRowAdminDocRepo: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Admin Edit Data Selects\n\nconst initialStateAdminEditField = {\n    adminEditField: ''\n}\n\nexport const adminEditFieldData = (state = initialStateAdminEditField, action = {}) => {\n    switch (action.type) {\n        case CHANGE_ADMIN_EDIT_DATA_FIELD_SELECTED:\n            return Object.assign({}, state, { adminEditField: action.payload })\n        default:\n            return state;\n    }\n}\n\nconst initialStateAdminEditValue = {\n    adminEditValue: ''\n}\n\nexport const adminEditValueData = (state = initialStateAdminEditValue, action = {}) => {\n    switch (action.type) {\n        case CHANGE_ADMIN_EDIT_DATA_VALUE_SELECTED:\n            return Object.assign({}, state, { adminEditValue: action.payload })\n        default:\n            return state;\n    }\n}\n\n//Admin Audit Log Reducers\n\n//State of Admin Audit Log Data\nconst initialStateAdminAuditLogInfoData = {\n    adminAuditLogInfo: auditLogInfo\n}\n\nexport const adminAuditLogInfoData = (state = initialStateAdminAuditLogInfoData, action = {}) => {\n    switch (action.type) {\n        case ADD_ACTIVITY:\n            return Object.assign({},\n                state,\n                { adminAuditLogInfo: [...state.adminAuditLogInfo, action.payload] });\n        default:\n            return state;\n    }\n}\n\n//State of SearchBox for Admin Audit Log\nconst initialStateAdminAuditLogSearchData = {\n    adminAuditLogSearchField: ''\n}\n\nexport const adminAuditLogSearchData = (state = initialStateAdminAuditLogSearchData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, { adminAuditLogSearchField: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Sort for Admin Audit Log\nconst initialStateAdminAuditLogSortData = {\n    adminAuditLogSort: 'none'\n}\n\nexport const adminAuditLogSortData = (state = initialStateAdminAuditLogSortData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SORT_VALUE:\n            return Object.assign({}, state, { adminAuditLogSort: action.payload })\n        default:\n            return state;\n    }\n}\n\n//User Activity Log Reducers\n\nconst initialStateUserActivityLogSearchData = {\n    userActivityLogSearchField: ''\n}\n\n\n//State of SearchBox for User Activity Log\nexport const userActivityLogSearchData = (state = initialStateUserActivityLogSearchData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, { userActivityLogSearchField: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Sort for User Activity Log\nconst initialStateUserActivityLogSortData = {\n    userActivityLogSort: 'none'\n}\n\nexport const userActivityLogSortData = (state = initialStateUserActivityLogSortData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SORT_VALUE:\n            return Object.assign({}, state, { userActivityLogSort: action.payload })\n        default:\n            return state;\n    }\n}\n\n//User Document Repo Reducers\n\n//State of SearchBox for User Doc Repo\nconst initialStateUserDocumentRepoSearchData = {\n    userDocumentRepoSearchField: ''\n}\n\nexport const userDocumentRepoSearchData = (state = initialStateUserDocumentRepoSearchData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, { userDocumentRepoSearchField: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Sort for User Doc Repo\nconst initialStateUserDocumentRepoSortData = {\n    userDocumentRepoSort: 'none'\n}\n\nexport const userDocumentRepoSortData = (state = initialStateUserDocumentRepoSortData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SORT_VALUE:\n            return Object.assign({}, state, { userDocumentRepoSort: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Status for User Doc Repo\nconst initialStateUserDocumentRepoStatusData = {\n    userDocumentRepoStatus: 'all'\n}\n\nexport const userDocumentRepoStatusData = (state = initialStateUserDocumentRepoStatusData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_STATUS_VALUE:\n            return Object.assign({}, state, { userDocumentRepoStatus: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Whether User Doc Repo is Being Edited (BOOL)\nconst initialStateUserEditDocumentRepoStatusData = {\n    userEditDocumentRepoStatus: false\n}\n\nexport const userEditDocumentRepoStatusData = (state = initialStateUserEditDocumentRepoStatusData, action = {}) => {\n    switch (action.type) {\n        case CHANGE_USER_EDIT_DOC_REPO_STATUS:\n            return Object.assign({}, state, { userEditDocumentRepoStatus: action.payload })\n        default:\n            return state;\n    }\n}\n\n//State of Selected Row for User Doc Repo\nconst initialStateSelectedRowUserDocRepo = {\n    selectedRowUserDocRepo: ''\n}\n\nexport const selectedRowUserDocRepoData = (state = initialStateSelectedRowUserDocRepo, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SELECTED_ROW_USER_DOC_REPO:\n            return Object.assign({}, state, { selectedRowUserDocRepo: action.payload })\n        default:\n            return state;\n    }\n}\n\n\n//State of User Edit Data Selects\n\nconst initialStateUserEditField = {\n    userEditField: ''\n}\n\nexport const userEditFieldData = (state = initialStateUserEditField, action = {}) => {\n    switch (action.type) {\n        case CHANGE_USER_EDIT_DATA_FIELD_SELECTED:\n            return Object.assign({}, state, { userEditField: action.payload })\n        default:\n            return state;\n    }\n}\n\nconst initialStateUserEditValue = {\n    userEditValue: ''\n}\n\nexport const userEditValueData = (state = initialStateUserEditValue, action = {}) => {\n    switch (action.type) {\n        case CHANGE_USER_EDIT_DATA_VALUE_SELECTED:\n            return Object.assign({}, state, { userEditValue: action.payload })\n        default:\n            return state;\n    }\n}\n\n// State of User Log In\n\nconst initialStateLogIn = {\n    logIn: false,\n    name: '',\n    dept: ''\n}\n\nexport const userLogInData = (state = initialStateLogIn, action = {}) => {\n    switch (action.type) {\n        case LOG_IN:\n            return Object.assign({}, state, { logIn: action.payload })\n        case SET_USER:\n            return Object.assign({}, state, { name: action.payload })\n        case SET_DEPT:\n            return Object.assign({}, state, { dept: action.payload })\n        default:\n            return state;\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}