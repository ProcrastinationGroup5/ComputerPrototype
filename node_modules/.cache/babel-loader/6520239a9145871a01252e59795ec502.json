{"ast":null,"code":"var _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/UserConsole/DocumentRepo/EditForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { setRowSelectedUserDocRepo, setUserEditDocRepoStatus, editData, changeUserEditDataFieldSelected, changeUserEditDataValueSelected, addActivity } from '../../actions';\nimport { getCurrentDateTime, isValidCode, isValidDate } from '../../globalFunctions';\n\nconst mapStateToProps = state => {\n  return {\n    info: state.documentRepoInfoData.documentRepoInfoDataVar,\n    userEditDocumentRepoStatus: state.userEditDocumentRepoStatusData.userEditDocumentRepoStatus,\n    selectedRowUserDocRepo: state.selectedRowUserDocRepoData.selectedRowUserDocRepo,\n    typeOptions: state.typeOptionsData.typeOptionsVar,\n    marketOptions: state.marketOptionsData.marketOptionsVar,\n    languageOptions: state.languageOptionsData.languageOptionsVar,\n    userEditField: state.userEditFieldData.userEditField,\n    userEditValue: state.userEditValueData.userEditValue,\n    accessControlInfo: state.adminAccessControlInfoData.adminAccessControlInfo,\n    name: state.userLogInData.name,\n    dept: state.userLogInData.dept\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setRowSelectedUserDocRepo: key => dispatch(setRowSelectedUserDocRepo(key)),\n    setUserEditDocRepoStatus: bool => dispatch(setUserEditDocRepoStatus(bool)),\n    editData: data => dispatch(editData(data)),\n    changeUserEditDataFieldSelected: text => dispatch(changeUserEditDataFieldSelected(text)),\n    changeUserEditDataValueSelected: text => dispatch(changeUserEditDataValueSelected(text)),\n    addActivity: data => dispatch(addActivity(data))\n  };\n};\n\nclass EditForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = () => {\n      if (this.props.userEditValue === '') {\n        window.alert('Please select a value you would like to edit to.');\n      } else if (this.props.userEditField === 'date' && !isValidDate(this.props.userEditValue)) {\n        return window.alert('Please input the date correctly as mm/dd/YYYY');\n      } else if (this.props.userEditField === 'code' && !isValidCode(this.props.userEditValue)) {\n        return window.alert('Please write the code in the correct format');\n      } else {\n        const findIndex = () => {\n          for (let i = 0; i < this.props.info.length; i++) {\n            if (this.props.info[i].key === this.props.selectedRowUserDocRepo) {\n              return i;\n            }\n          }\n        };\n\n        this.props.addActivity({\n          activity: 'Edited Document: ' + this.props.info[findIndex()].code,\n          user: this.props.name,\n          date: getCurrentDateTime(),\n          division: this.props.dept,\n          ip: '111.111.111'\n        });\n        let newData = this.props.info[findIndex()];\n\n        switch (this.props.userEditField) {\n          case 'type':\n            newData.type = this.props.userEditValue;\n            this.props.editData({\n              newData\n            });\n            break;\n\n          case 'market':\n            newData.market = this.props.userEditValue;\n            this.props.editData({\n              newData\n            });\n            break;\n\n          case 'language':\n            newData.language = this.props.userEditValue;\n            this.props.editData({\n              newData\n            });\n            break;\n\n          case 'visibility':\n            newData.visibility = this.props.userEditValue;\n            this.props.editData({\n              newData\n            });\n            break;\n\n          case 'date':\n            newData.date = this.props.userEditValue;\n            this.props.editData({\n              newData\n            });\n            break;\n\n          case 'code':\n            newData.code = this.props.userEditValue;\n            this.props.editData({\n              newData\n            });\n            break;\n\n          case 'status':\n            newData.status = this.props.userEditValue;\n            this.props.editData({\n              newData\n            });\n            break;\n\n          case 'name':\n            newData.name = this.props.userEditValue;\n            this.props.editData({\n              newData\n            });\n            break;\n\n          default:\n            break;\n        }\n\n        this.props.changeUserEditDataFieldSelected('');\n        this.props.changeUserEditDataValueSelected('');\n        this.props.setRowSelectedUserDocRepo('');\n        this.props.setUserEditDocRepoStatus(false);\n      }\n    };\n\n    this.handleValueChange = event => {\n      this.props.changeUserEditDataValueSelected(event.target.value);\n    };\n\n    this.handleClick = event => {\n      this.props.changeUserEditDataFieldSelected(event.target.value);\n      this.props.changeUserEditDataValueSelected('');\n    };\n\n    this.renderEditInput = () => {\n      if (this.props.userEditField === 'type') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          style: {\n            width: \"50%\",\n            fontSize: '0.8vw',\n            marginLeft: '25%'\n          },\n          onChange: this.handleValueChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: \"true\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Change to:\"), this.props.typeOptions.map(typeOption => React.createElement(\"option\", {\n          key: typeOption.value,\n          value: typeOption.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, typeOption.text))), React.createElement(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            width: '50%',\n            fontSize: '0.8vw'\n          },\n          onClick: () => {\n            this.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Submit\"));\n      } else if (this.props.userEditField === 'market') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          style: {\n            width: \"50%\",\n            fontSize: '0.8vw',\n            marginLeft: '25%'\n          },\n          onChange: this.handleValueChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: \"true\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Change to:\"), this.props.marketOptions.map(marketOption => React.createElement(\"option\", {\n          key: marketOption.text,\n          value: marketOption.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, marketOption.text))), React.createElement(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            width: '50%',\n            fontSize: '0.8vw'\n          },\n          onClick: () => {\n            this.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Submit\"));\n      } else if (this.props.userEditField === 'language') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          style: {\n            width: \"50%\",\n            fontSize: '0.8vw',\n            marginLeft: '25%'\n          },\n          onChange: this.handleValueChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: \"true\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \"Change to:\"), this.props.languageOptions.map(languageOption => React.createElement(\"option\", {\n          key: languageOption.text,\n          value: languageOption.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, languageOption.text))), React.createElement(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            width: '50%',\n            fontSize: '0.8vw'\n          },\n          onClick: () => {\n            this.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Submit\"));\n      } else if (this.props.userEditField === 'date') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            width: \"50%\",\n            fontSize: '0.8vw',\n            marginLeft: '25%'\n          },\n          id: \"txt\",\n          type: \"text\",\n          onChange: this.handleValueChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }), React.createElement(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            width: '50%',\n            fontSize: '0.8vw'\n          },\n          onClick: () => {\n            this.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, \"Submit\"));\n      } else if (this.props.userEditField === 'visibility') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          style: {\n            width: \"50%\",\n            fontSize: '0.8vw',\n            marginLeft: '25%'\n          },\n          onChange: this.handleValueChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          selected: \"true\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, \"Change to:\"), React.createElement(\"option\", {\n          value: \"PUBLIC\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, \"PUBLIC\"), React.createElement(\"option\", {\n          value: \"TENANTID\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, \"TENANTID\")), React.createElement(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            width: '50%',\n            fontSize: '0.8vw'\n          },\n          onClick: () => {\n            this.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Submit\"));\n      } else if (this.props.userEditField === 'code') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            width: \"50%\",\n            fontSize: '0.8vw',\n            marginLeft: '25%'\n          },\n          id: \"txt\",\n          type: \"text\",\n          onChange: this.handleValueChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }), React.createElement(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            width: '50%',\n            fontSize: '0.8vw'\n          },\n          onClick: () => {\n            this.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, \"Submit\"));\n      } else if (this.props.userEditField === 'name') {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          style: {\n            width: \"50%\",\n            fontSize: '0.8vw',\n            marginLeft: '25%'\n          },\n          id: \"txt\",\n          type: \"text\",\n          onChange: this.handleValueChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }), React.createElement(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          style: {\n            width: '50%',\n            fontSize: '0.8vw'\n          },\n          onClick: () => {\n            this.handleSubmit();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"Submit\"));\n      } else {\n        return null;\n      }\n    };\n  }\n\n  render() {\n    if (this.props.selectedRowUserDocRepo !== '') {\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        style: {\n          fontSize: '0.8vw',\n          width: '50%',\n          display: 'inline-block'\n        },\n        onChange: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: \"true\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Select Field:\"), React.createElement(\"option\", {\n        value: \"code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Code\"), React.createElement(\"option\", {\n        value: \"visibility\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Visibility\"), React.createElement(\"option\", {\n        value: \"market\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Market\"), React.createElement(\"option\", {\n        value: \"type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"option\", {\n        value: \"language\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Language\"), React.createElement(\"option\", {\n        value: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"option\", {\n        value: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Name\")), this.renderEditInput());\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/UserConsole/DocumentRepo/EditForm.js"],"names":["React","Component","connect","Button","setRowSelectedUserDocRepo","setUserEditDocRepoStatus","editData","changeUserEditDataFieldSelected","changeUserEditDataValueSelected","addActivity","getCurrentDateTime","isValidCode","isValidDate","mapStateToProps","state","info","documentRepoInfoData","documentRepoInfoDataVar","userEditDocumentRepoStatus","userEditDocumentRepoStatusData","selectedRowUserDocRepo","selectedRowUserDocRepoData","typeOptions","typeOptionsData","typeOptionsVar","marketOptions","marketOptionsData","marketOptionsVar","languageOptions","languageOptionsData","languageOptionsVar","userEditField","userEditFieldData","userEditValue","userEditValueData","accessControlInfo","adminAccessControlInfoData","adminAccessControlInfo","name","userLogInData","dept","mapDispatchToProps","dispatch","key","bool","data","text","EditForm","handleSubmit","props","window","alert","findIndex","i","length","activity","code","user","date","division","ip","newData","type","market","language","visibility","status","handleValueChange","event","target","value","handleClick","renderEditInput","width","fontSize","marginLeft","map","typeOption","marketOption","languageOption","render","textAlign","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport {\n    setRowSelectedUserDocRepo,\n    setUserEditDocRepoStatus,\n    editData,\n    changeUserEditDataFieldSelected,\n    changeUserEditDataValueSelected,\n    addActivity\n} from '../../actions';\nimport { getCurrentDateTime, isValidCode, isValidDate } from '../../globalFunctions'\n\n\nconst mapStateToProps = state => {\n    return {\n        info: state.documentRepoInfoData.documentRepoInfoDataVar,\n        userEditDocumentRepoStatus: state.userEditDocumentRepoStatusData.userEditDocumentRepoStatus,\n        selectedRowUserDocRepo: state.selectedRowUserDocRepoData.selectedRowUserDocRepo,\n        typeOptions: state.typeOptionsData.typeOptionsVar,\n        marketOptions: state.marketOptionsData.marketOptionsVar,\n        languageOptions: state.languageOptionsData.languageOptionsVar,\n        userEditField: state.userEditFieldData.userEditField,\n        userEditValue: state.userEditValueData.userEditValue,\n        accessControlInfo: state.adminAccessControlInfoData.adminAccessControlInfo,\n        name: state.userLogInData.name,\n        dept: state.userLogInData.dept\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setRowSelectedUserDocRepo: (key) => dispatch(setRowSelectedUserDocRepo(key)),\n        setUserEditDocRepoStatus: (bool) => dispatch(setUserEditDocRepoStatus(bool)),\n        editData: (data) => dispatch(editData(data)),\n        changeUserEditDataFieldSelected: (text) => dispatch(changeUserEditDataFieldSelected(text)),\n        changeUserEditDataValueSelected: (text) => dispatch(changeUserEditDataValueSelected(text)),\n        addActivity: (data) => dispatch(addActivity(data))\n    }\n}\n\nclass EditForm extends Component {\n\n    handleSubmit = () => {\n        if (this.props.userEditValue === '') {\n            window.alert('Please select a value you would like to edit to.')\n        }\n        else if (this.props.userEditField === 'date' && !isValidDate(this.props.userEditValue)) {\n            return window.alert('Please input the date correctly as mm/dd/YYYY')\n        }\n        else if (this.props.userEditField === 'code' && !isValidCode(this.props.userEditValue)) {\n            return window.alert('Please write the code in the correct format')\n        }\n        else {\n\n            const findIndex = () => {\n                for (let i = 0; i < this.props.info.length; i++) {\n                    if (this.props.info[i].key === this.props.selectedRowUserDocRepo) {\n                        return i;\n                    }\n                } \n            }\n\n            this.props.addActivity({\n                activity: 'Edited Document: ' + this.props.info[findIndex()].code,\n                user: this.props.name,\n                date: getCurrentDateTime(),\n                division: this.props.dept,\n                ip: '111.111.111'\n            })\n\n            let newData = this.props.info[findIndex()];\n\n            switch (this.props.userEditField) {\n                case 'type':\n                    newData.type = this.props.userEditValue\n                    this.props.editData({\n                        newData\n                    })\n                    break;\n                case 'market':\n                    newData.market = this.props.userEditValue\n                    this.props.editData({\n                        newData\n                    })\n                    break;\n                case 'language':\n                    newData.language = this.props.userEditValue\n                    this.props.editData({\n                        newData\n                    })\n                    break;\n                case 'visibility':\n                    newData.visibility = this.props.userEditValue\n                    this.props.editData({\n                        newData\n                    })\n                    break;\n                case 'date':\n                    newData.date = this.props.userEditValue\n                    this.props.editData({\n                        newData\n                    })\n                    break;\n                case 'code':\n                    newData.code = this.props.userEditValue\n                    this.props.editData({\n                        newData\n                    })\n                    break;\n                case 'status':\n                    newData.status = this.props.userEditValue\n                    this.props.editData({\n                        newData\n                    })\n                    break;\n                case 'name':\n                    newData.name = this.props.userEditValue\n                    this.props.editData({\n                        newData\n                    })\n                    break;\n                default:\n                    break;\n            }\n            this.props.changeUserEditDataFieldSelected('')\n            this.props.changeUserEditDataValueSelected('')\n            this.props.setRowSelectedUserDocRepo('')\n            this.props.setUserEditDocRepoStatus(false)\n        }\n    }\n\n    handleValueChange = (event) => {\n        this.props.changeUserEditDataValueSelected(event.target.value)\n    }\n\n    handleClick = (event) => {\n        this.props.changeUserEditDataFieldSelected(event.target.value)\n        this.props.changeUserEditDataValueSelected('')\n    }\n\n    renderEditInput = () => {\n        if (this.props.userEditField === 'type') {\n            return (\n                <div>\n                    <select style={{ width: \"50%\", fontSize: '0.8vw', marginLeft: '25%' }} onChange={this.handleValueChange}>\n                        <option selected='true' disabled>Change to:</option>\n                        {this.props.typeOptions.map(typeOption => (\n                            <option key={typeOption.value} value={typeOption.text}>\n                                {typeOption.text}\n                            </option>\n                        ))}\n                    </select>\n                    <Button size='small' variant=\"outlined\" style={{ width: '50%', fontSize: '0.8vw' }} onClick={() => { this.handleSubmit() }}>\n                        Submit\n                    </Button>\n                </div>\n            )\n        }\n        else if (this.props.userEditField === 'market') {\n            return (\n                <div>\n                    <select style={{ width: \"50%\", fontSize: '0.8vw', marginLeft: '25%' }} onChange={this.handleValueChange}>\n                        <option selected='true' disabled>Change to:</option>\n                        {this.props.marketOptions.map(marketOption => (\n                            <option key={marketOption.text} value={marketOption.value}>\n                                {marketOption.text}\n                            </option>\n                        ))}\n                    </select>\n                    <Button size='small' variant=\"outlined\" style={{ width: '50%', fontSize: '0.8vw' }} onClick={() => { this.handleSubmit() }}>\n                        Submit\n                    </Button>\n                </div>\n            )\n        }\n        else if (this.props.userEditField === 'language') {\n            return (\n                <div>\n                    <select style={{ width: \"50%\", fontSize: '0.8vw', marginLeft: '25%' }} onChange={this.handleValueChange}>\n                        <option selected='true' disabled>Change to:</option>\n                        {this.props.languageOptions.map(languageOption => (\n                            <option key={languageOption.text} value={languageOption.value}>\n                                {languageOption.text}\n                            </option>\n                        ))}\n                    </select>\n                    <Button size='small' variant=\"outlined\" style={{ width: '50%', fontSize: '0.8vw' }} onClick={() => { this.handleSubmit() }}>\n                        Submit\n                    </Button>\n                </div>\n            )\n        }\n        else if (this.props.userEditField === 'date') {\n            return (\n                <div>\n                    <input style={{ width: \"50%\", fontSize: '0.8vw', marginLeft: '25%' }} id='txt' type='text' onChange={this.handleValueChange}></input>\n                    <Button size='small' variant=\"outlined\" style={{ width: '50%', fontSize: '0.8vw' }} onClick={() => { this.handleSubmit() }}>\n                        Submit\n                    </Button>\n                </div>\n            )\n        }\n        else if (this.props.userEditField === 'visibility') {\n            return (\n                <div>\n                    <select style={{ width: \"50%\", fontSize: '0.8vw', marginLeft: '25%' }} onChange={this.handleValueChange}>\n                        <option selected='true' disabled>Change to:</option>\n                        <option value=\"PUBLIC\">PUBLIC</option>\n                        <option value=\"TENANTID\">TENANTID</option>\n                    </select>\n                    <Button size='small' variant=\"outlined\" style={{ width: '50%', fontSize: '0.8vw' }} onClick={() => { this.handleSubmit() }}>\n                        Submit\n                    </Button>\n                </div>\n            )\n        }\n        else if (this.props.userEditField === 'code') {\n            return (\n                <div>\n                    <input style={{ width: \"50%\", fontSize: '0.8vw', marginLeft: '25%' }} id='txt' type='text' onChange={this.handleValueChange}></input>\n                    <Button size='small' variant=\"outlined\" style={{ width: '50%', fontSize: '0.8vw' }} onClick={() => { this.handleSubmit() }}>\n                        Submit\n                    </Button>\n                </div>\n            )\n        }\n        else if (this.props.userEditField === 'name') {\n            return (\n                <div>\n                    <input style={{ width: \"50%\", fontSize: '0.8vw', marginLeft: '25%' }} id='txt' type='text' onChange={this.handleValueChange}></input>\n                    <Button size='small' variant=\"outlined\" style={{ width: '50%', fontSize: '0.8vw' }} onClick={() => { this.handleSubmit() }}>\n                        Submit\n                    </Button>\n                </div>\n            )\n        }\n        else {\n            return null;\n        }\n    }\n\n    render() {\n        if (this.props.selectedRowUserDocRepo !== '') {\n            return (\n                <div style={{ textAlign: 'center' }} >\n                    <select style={{ fontSize: '0.8vw', width: '50%', display: 'inline-block' }} onChange={this.handleClick}>\n                        <option selected='true' disabled>Select Field:</option>\n                        <option value='code'>Code</option>\n                        <option value='visibility'>Visibility</option>\n                        <option value='market'>Market</option>\n                        <option value='type'>Type</option>\n                        <option value='language'>Language</option>\n                        <option value='date'>Date</option>\n                        <option value='name'>Name</option>\n                    </select>\n                    {this.renderEditInput()}\n                </div>\n            )\n        }\n        else {\n            return null;\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);"]},"metadata":{},"sourceType":"module"}