{"ast":null,"code":"var _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/Visualisation/Visualisation.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Circle } from 'react-shapes';\nimport { displayTaskInfoFlip, displayANTBoolFlip } from '../actions';\nimport Button from '@material-ui/core/Button';\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.editTasks.tasksVar,\n    tasksLength: state.editTasks.tasksLength\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayTaskInfoFlip: bool => dispatch(displayTaskInfoFlip(bool)),\n    displayANTBoolFlip: bool => dispatch(displayANTBoolFlip(bool))\n  };\n};\n\nclass Visualisation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.taskNameClicked = () => {\n      this.props.displayANTBoolFlip(false);\n      this.props.displayTaskInfoFlip(true);\n    };\n  }\n\n  render() {\n    const tasksList = [];\n\n    for (let i = 0; i < this.props.tasksLength; i++) {\n      tasksList.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"taskNameButton\",\n        onClick: () => {\n          this.taskNameClicked();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.tasks[i].name), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Circle, {\n        r: this.props.tasks[i].subtasks.length * 40,\n        fill: {\n          color: '#2409ba'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, tasksList);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Visualisation);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/Visualisation/Visualisation.js"],"names":["React","Component","connect","Circle","displayTaskInfoFlip","displayANTBoolFlip","Button","mapStateToProps","state","tasks","editTasks","tasksVar","tasksLength","mapDispatchToProps","dispatch","bool","Visualisation","taskNameClicked","props","render","tasksList","i","push","name","subtasks","length","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SACIC,mBADJ,EAEIC,kBAFJ,QAGO,YAHP;AAIA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBC,QADpB;AAEHC,IAAAA,WAAW,EAAEJ,KAAK,CAACE,SAAN,CAAgBE;AAF1B,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHV,IAAAA,mBAAmB,EAAGW,IAAD,IAAUD,QAAQ,CAACV,mBAAmB,CAACW,IAAD,CAApB,CADpC;AAEHV,IAAAA,kBAAkB,EAAGU,IAAD,IAAUD,QAAQ,CAACT,kBAAkB,CAACU,IAAD,CAAnB;AAFnC,GAAP;AAIH,CALD;;AAOA,MAAMC,aAAN,SAA4Bf,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAElCgB,eAFkC,GAEhB,MAAM;AACpB,WAAKC,KAAL,CAAWb,kBAAX,CAA8B,KAA9B;AACA,WAAKa,KAAL,CAAWd,mBAAX,CAA+B,IAA/B;AACH,KALiC;AAAA;;AAOlCe,EAAAA,MAAM,GAAG;AAEL,UAAMC,SAAS,GAAG,EAAlB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,KAAL,CAAWN,WAA/B,EAA4CS,CAAC,EAA7C,EAAiD;AAC7CD,MAAAA,SAAS,CAACE,IAAV,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKL,eAAL;AAAwB,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+E,KAAKC,KAAL,CAAWT,KAAX,CAAiBY,CAAjB,EAAoBE,IAAnG,CADJ,EACqH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrH,EAEI,oBAAC,MAAD;AAAQ,QAAA,CAAC,EAAE,KAAKL,KAAL,CAAWT,KAAX,CAAiBY,CAAjB,EAAoBG,QAApB,CAA6BC,MAA7B,GAAsC,EAAjD;AAAqD,QAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAEuF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFvF,CADJ;AAMH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,SADL,CADJ;AAKH;;AAzBiC;;AA4BtC,eAAelB,OAAO,CAACK,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CG,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Circle } from 'react-shapes';\nimport {\n    displayTaskInfoFlip,\n    displayANTBoolFlip\n} from '../actions'\nimport Button from '@material-ui/core/Button';\n\nconst mapStateToProps = state => {\n    return {\n        tasks: state.editTasks.tasksVar,\n        tasksLength: state.editTasks.tasksLength\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        displayTaskInfoFlip: (bool) => dispatch(displayTaskInfoFlip(bool)),\n        displayANTBoolFlip: (bool) => dispatch(displayANTBoolFlip(bool))\n    }\n}\n\nclass Visualisation extends Component {\n\n    taskNameClicked = () => {\n        this.props.displayANTBoolFlip(false)\n        this.props.displayTaskInfoFlip(true)\n    }\n\n    render() {\n\n        const tasksList = [];\n\n        for (let i = 0; i < this.props.tasksLength; i++) {\n            tasksList.push(\n                <div>\n                    <Button className='taskNameButton' onClick={() => { this.taskNameClicked() }}>{this.props.tasks[i].name}</Button><br/>\n                    <Circle r={this.props.tasks[i].subtasks.length * 40} fill={{ color: '#2409ba' }} /><br />\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                {tasksList}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Visualisation)"]},"metadata":{},"sourceType":"module"}