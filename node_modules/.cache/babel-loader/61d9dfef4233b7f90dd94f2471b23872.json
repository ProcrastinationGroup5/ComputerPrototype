{"ast":null,"code":"var _jsxFileName = \"/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/TaskDetails/TaskDetails.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { addNewSubtask } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.editTasks.tasksVar,\n    tasksLength: state.editTasks.tasksLength,\n    selectedTask: state.setTaskSelected.taskSelectedVar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addNewSubtask: array => dispatch(addNewSubtask(array))\n  };\n};\n\nclass TaskDetails extends Component {\n  constructor() {\n    super();\n\n    this.bgColor = index => {\n      if (this.state.selectedTaskDetailRow === '') {\n        return 'white';\n      }\n\n      if (this.state.selectedTaskDetailRow === index) {\n        return '#d1d1d1';\n      } else {\n        return 'white';\n      }\n    };\n\n    this.handleChange = index => {\n      if (this.state.selectedTaskDetailRow !== index) {\n        this.setState({\n          selectedTaskDetailRow: index\n        });\n      } else {\n        this.setState({\n          selectedTaskDetailRow: ''\n        });\n      }\n    };\n\n    this.handleAdditionalSubtaskChange = (i, event) => {\n      const newAdditionalSubtasks = this.state.additionalSubtasks.slice();\n      newAdditionalSubtasks[i] = event.target.value;\n      this.setState({\n        additionalSubtasks: newAdditionalSubtasks,\n        selectedTaskDetailRow: ''\n      });\n    };\n\n    this.handleSubmit = () => {\n      // this.props.addNewSubtask({\n      //     index: this.props.selectedTask,\n      //     items: this.state.additionalSubtasks\n      // })\n      this.setState({\n        selectedTaskDetailRow: '',\n        numberAdditionalSubtasks: 0\n      });\n    };\n\n    this.state = {\n      selectedTaskDetailRow: '',\n      numberAdditionalSubtasks: 0,\n      additionalSubtasks: new Array(this.numberAdditionalSubtasks)\n    };\n  }\n\n  render() {\n    const subTaskInputs = [];\n\n    for (let i = 0; i < this.state.numberAdditionalSubtasks; i++) {\n      subTaskInputs.push(React.createElement(\"input\", {\n        type: \"text\",\n        className: \"addInputSubtask\",\n        onChange: event => this.handleAdditionalSubtaskChange(i, event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"taskDetailsInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.props.tasks[this.props.selectedTask].name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Due Date: \", this.props.tasks[this.props.selectedTask].date), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.tasks[this.props.selectedTask].subtasks.map((subtask, index) => React.createElement(TableRow, {\n      key: index,\n      onClick: event => this.handleChange(index),\n      style: {\n        backgroundColor: this.bgColor(index)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, subtask)))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, subTaskInputs), React.createElement(Button, {\n      size: \"small\",\n      onClick: () => {\n        this.setState({\n          numberAdditionalSubtasks: this.state.numberAdditionalSubtasks + 1\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Add SubTask\"), React.createElement(Button, {\n      size: \"small\",\n      onClick: () => {\n        this.handleSubmit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskDetails);","map":{"version":3,"sources":["/Users/vishaldhileepan/Desktop/CS330/P6 Computer Prototype/prototype1/src/TaskDetails/TaskDetails.js"],"names":["React","Component","connect","Table","TableBody","TableCell","TableRow","Button","addNewSubtask","mapStateToProps","state","tasks","editTasks","tasksVar","tasksLength","selectedTask","setTaskSelected","taskSelectedVar","mapDispatchToProps","dispatch","array","TaskDetails","constructor","bgColor","index","selectedTaskDetailRow","handleChange","setState","handleAdditionalSubtaskChange","i","event","newAdditionalSubtasks","additionalSubtasks","slice","target","value","handleSubmit","numberAdditionalSubtasks","Array","render","subTaskInputs","push","props","name","date","subtasks","map","subtask","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport {\n    addNewSubtask\n} from '../actions'\n\nconst mapStateToProps = state => {\n    return {\n        tasks: state.editTasks.tasksVar,\n        tasksLength: state.editTasks.tasksLength,\n        selectedTask: state.setTaskSelected.taskSelectedVar\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addNewSubtask: (array) => dispatch(addNewSubtask(array))\n    }\n}\n\nclass TaskDetails extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            selectedTaskDetailRow: '',\n            numberAdditionalSubtasks: 0,\n            additionalSubtasks: new Array(this.numberAdditionalSubtasks)\n        }\n    }\n\n    bgColor = (index) => {\n        if (this.state.selectedTaskDetailRow === '') {\n            return 'white';\n        }\n        if (this.state.selectedTaskDetailRow === index) {\n            return '#d1d1d1';\n        } else {\n            return 'white';\n        }\n    }\n\n    handleChange = (index) => {\n        if (this.state.selectedTaskDetailRow !== index) {\n            this.setState({\n                selectedTaskDetailRow: index\n            })\n        } else {\n            this.setState({\n                selectedTaskDetailRow: ''\n            })\n        }\n    }\n\n    handleAdditionalSubtaskChange = (i, event) => {\n\n        const newAdditionalSubtasks = this.state.additionalSubtasks.slice()\n        newAdditionalSubtasks[i] = event.target.value\n        this.setState({ additionalSubtasks: newAdditionalSubtasks,\n        selectedTaskDetailRow: '' })\n    }\n\n    handleSubmit = () => {\n\n        // this.props.addNewSubtask({\n        //     index: this.props.selectedTask,\n        //     items: this.state.additionalSubtasks\n        // })\n\n        this.setState({\n            selectedTaskDetailRow: '',\n            numberAdditionalSubtasks: 0,\n        })\n\n    }\n\n    render() {\n\n        const subTaskInputs = [];\n\n        for (let i = 0; i < this.state.numberAdditionalSubtasks; i++) {\n            subTaskInputs.push(<input type=\"text\"\n                className='addInputSubtask'\n                onChange={(event) => this.handleAdditionalSubtaskChange(i, event)}\n            />)\n        }\n\n        return (\n            <div>\n                <div className='taskDetailsInfo'>\n                    <h1>{this.props.tasks[this.props.selectedTask].name}</h1>\n                    <h2>Due Date: {this.props.tasks[this.props.selectedTask].date}</h2>\n                    <Table>\n                        <TableBody>\n                            {this.props.tasks[this.props.selectedTask].subtasks.map((subtask, index) => (\n                                <TableRow key={index} onClick={event => this.handleChange(index)} style={{ backgroundColor: this.bgColor(index) }}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {subtask}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </div>\n                <div>\n                    {subTaskInputs}\n                </div>\n\n                <Button size='small' onClick={() => {\n                    this.setState({\n                        numberAdditionalSubtasks: this.state.numberAdditionalSubtasks + 1\n                    })\n                }}>\n                    Add SubTask\n                </Button>\n\n                <Button size='small' onClick={() => { this.handleSubmit() }}>\n                    Submit\n                </Button>\n            </div>\n\n        )\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskDetails)"]},"metadata":{},"sourceType":"module"}